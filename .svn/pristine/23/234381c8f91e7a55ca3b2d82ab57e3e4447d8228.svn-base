package com.pq.tracs.model.vo;

import com.pq.tracs.model.eo.TraxEventContentOwnerImpl;
import com.pq.tracs.model.eo.TraxEventImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.RowCreateException;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 23 09:44:58 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class KeyAccountActionViewRowImpl extends ViewRowImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public KeyAccountActionViewRowImpl() {
    }

    /**
     * Gets TraxEventContentOwner entity object.
     * @return the TraxEventContentOwner
     */
    public TraxEventContentOwnerImpl getTraxEventContentOwner() {
        return (TraxEventContentOwnerImpl)getEntity(0);
    }

    /**
     * Gets TraxEvent entity object.
     * @return the TraxEvent
     */
    public TraxEventImpl getTraxEvent() {
        return (TraxEventImpl)getEntity(1);
    }
    
  /**
     * By default, the framework will automatically create the new
     * underlying entity object instances that are related to this
     * view object row being created.
     *
     * We override this default view object row creation to explicitly
     * pre-populate the new (detail) TraxEventContentOwnerImpl instance using
     * the new (master) TraxEventImpl instance. Since all entity objects
     * implement the AttributeList interface, we can directly pass the
     * new SuppliersImpl instance to the ProductsImpl create()
     * method that accepts an AttributeList.
     */
    protected void create(AttributeList attributeList) {
      // The view row will already have created "blank" entity instances
      TraxEventImpl newEvent = getTraxEvent();
      TraxEventContentOwnerImpl newEventContentOwner = getTraxEventContentOwner();
      try {
          // Let event "blank" entity instance do programmatic defaulting
          newEvent.create(attributeList);
          // Let event content owner "blank" entity instance do programmatic
          // defaulting passing in new TraxEventImpl instance so its attributes
          // are available to the TraxEventContentOwnerImpl's create method.
          newEventContentOwner.create(newEvent);
          newEventContentOwner.setEventId(newEvent.getId());
       }
       catch (JboException ex) {
         newEvent.revert();
         newEventContentOwner.revert();      
         throw ex;
       }
       catch (Exception otherEx) {
         newEvent.revert();
         newEventContentOwner.revert();      
         throw new RowCreateException(true      /* EO Row? */,
                                      "Product" /* EO Name */,
                                      otherEx   /* Details */);
       }
    }

}
