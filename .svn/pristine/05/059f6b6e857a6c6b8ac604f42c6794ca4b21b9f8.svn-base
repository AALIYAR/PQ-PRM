package com.pq.tracs.model.service;

import com.pq.tracs.model.eo.PrmAccountAllianceManagerImpl;
import com.pq.tracs.model.eo.PrmOpportunityAllianceMgrImpl;
import com.pq.tracs.model.eo.PrmOpportunityTargetImpl;
import com.pq.tracs.model.eo.PrmTargetedProductManagerImpl;
import com.pq.tracs.model.eo.PrmTargetedProductTitleImpl;
import com.pq.tracs.model.service.common.PrmAppModule;


import com.pq.tracs.model.vo.NTCPublisherViewImpl;
import com.pq.tracs.model.vo.NTCTitleViewImpl;
import com.pq.tracs.model.vo.PRMView;
import com.pq.tracs.model.vo.PrmAccountProductDisciplineViewImpl;
import com.pq.tracs.model.vo.PrmOpportunityActivityViewImpl;
import com.pq.tracs.model.vo.PrmTargetGroupViewImpl;

import com.pq.tracs.model.vo.PrmTargetGroupViewRowImpl;

import com.pq.tracs.model.vo.TraxImportFileViewImpl;
import com.pq.tracs.model.vo.TraxUlrichsTitleViewImpl;

import com.pq.tracs.model.vo.TraxUlrichsTitleViewRowImpl;

import com.pq.tracs.model.vo.JhsUsersViewImpl;

import java.math.BigDecimal;

import java.sql.PreparedStatement;
import java.sql.SQLException;

import java.util.Iterator;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.ViewLinkImpl;


import oracle.jbo.server.ViewObjectImpl;

import oracle.jheadstart.model.JhsUserContext;
import oracle.jheadstart.model.adfbc.v2.JhsApplicationModuleImpl;
import oracle.jheadstart.util.DatabaseProcedure;

import org.apache.myfaces.trinidad.render.ExtendedRenderKitService;
import org.apache.myfaces.trinidad.util.Service;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 06 21:15:18 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrmAppModuleImpl extends JhsApplicationModuleImpl implements PrmAppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public PrmAppModuleImpl() {
    }


    /**
     * Container's getter for TraxContentOwnerView1.
     * @return TraxContentOwnerView1
     */
    public ViewObjectImpl getTraxContentOwnerView1() {
        return (ViewObjectImpl)findViewObject("TraxContentOwnerView1");
    }

    /**
     * Container's getter for PrmOpportunityView1.
     * @return PrmOpportunityView1
     */
    public ViewObjectImpl getPrmOpportunityView1() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityView1");
    }

    /**
     * Container's getter for PrmOpportunityView2.
     * @return PrmOpportunityView2
     */
    public ViewObjectImpl getPrmOpportunityView2() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityView2");
    }

    /**
     * Container's getter for TraxContentOwnerView2.
     * @return TraxContentOwnerView2
     */
    public ViewObjectImpl getTraxContentOwnerView2() {
        return (ViewObjectImpl)findViewObject("TraxContentOwnerView2");
    }

    /**
     * Container's getter for TraxContractView1.
     * @return TraxContractView1
     */
    public ViewObjectImpl getTraxContractView1() {
        return (ViewObjectImpl)findViewObject("TraxContractView1");
    }

    /**
     * Container's getter for TraxContractView2.
     * @return TraxContractView2
     */
    public ViewObjectImpl getTraxContractView2() {
        return (ViewObjectImpl)findViewObject("TraxContractView2");
    }

    /**
     * Container's getter for PrmTargetGroupView1.
     * @return PrmTargetGroupView1
     */
    public ViewObjectImpl getPrmTargetGroupView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetGroupView1");
    }

    /**
     * Container's getter for PrmTargetedProductView1.
     * @return PrmTargetedProductView1
     */
    public ViewObjectImpl getPrmTargetedProductView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetedProductView1");
    }

    /**
     * Container's getter for PrmOpportunityAttachmentView1.
     * @return PrmOpportunityAttachmentView1
     */
    public ViewObjectImpl getPrmOpportunityAttachmentView1() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityAttachmentView1");
    }

    /**
     * Container's getter for OpportunityAttachmentTypeLookup.
     * @return OpportunityAttachmentTypeLookup
     */
    public ViewObjectImpl getOpportunityAttachmentTypeLookup() {
        return (ViewObjectImpl)findViewObject("OpportunityAttachmentTypeLookup");
    }

    /**
     * Container's getter for OpportunityAttachmentSubTypeLookup.
     * @return OpportunityAttachmentSubTypeLookup
     */
    public ViewObjectImpl getOpportunityAttachmentSubTypeLookup() {
        return (ViewObjectImpl)findViewObject("OpportunityAttachmentSubTypeLookup");
    }

    /**
     * Container's getter for ContactLookup.
     * @return ContactLookup
     */
    public ViewObjectImpl getContactLookup() {
        return (ViewObjectImpl)findViewObject("ContactLookup");
    }


    /**
     * Container's getter for TraxTitleView1.
     * @return TraxTitleView1
     */
    public ViewObjectImpl getTraxTitleView1() {
        return (ViewObjectImpl)findViewObject("TraxTitleView1");
    }

    /**
     * Container's getter for TraxTitleView2.
     * @return TraxTitleView2
     */
    public ViewObjectImpl getTraxTitleView2() {
        return (ViewObjectImpl)findViewObject("TraxTitleView2");
    }


    /**
     * Container's getter for KeyAccountLevelLookup.
     * @return KeyAccountLevelLookup
     */
    public ViewObjectImpl getKeyAccountLevelLookup() {
        return (ViewObjectImpl)findViewObject("KeyAccountLevelLookup");
    }

    /**
     * Container's getter for KeyAccountNoteTypeLookup.
     * @return KeyAccountNoteTypeLookup
     */
    public ViewObjectImpl getKeyAccountNoteTypeLookup() {
        return (ViewObjectImpl)findViewObject("KeyAccountNoteTypeLookup");
    }

    /**
     * Container's getter for TraxEventView1.
     * @return TraxEventView1
     */
    public ViewObjectImpl getTraxEventView1() {
        return (ViewObjectImpl)findViewObject("TraxEventView1");
    }

    /**
     * Container's getter for KeyAccountNoteView1.
     * @return KeyAccountNoteView1
     */
    public ViewObjectImpl getKeyAccountNoteView1() {
        return (ViewObjectImpl)findViewObject("KeyAccountNoteView1");
    }

    /**
     * Container's getter for PrmTargetGroupTitleView1.
     * @return PrmTargetGroupTitleView1
     */
    public ViewObjectImpl getPrmTargetGroupTitleView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetGroupTitleView1");
    }

    /**
     * Container's getter for TitleLookup.
     * @return TitleLookup
     */
    public ViewObjectImpl getTitleLookup() {
        return (ViewObjectImpl)findViewObject("TitleLookup");
    }

    /**
     * Container's getter for PrmTargetGroupProductView1.
     * @return PrmTargetGroupProductView1
     */
    public ViewObjectImpl getPrmTargetGroupProductView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetGroupProductView1");
    }

    /**
     * Container's getter for TargetedProductLookup.
     * @return TargetedProductLookup
     */
    public ViewObjectImpl getTargetedProductLookup() {
        return (ViewObjectImpl)findViewObject("TargetedProductLookup");
    }

    /**
     * Container's getter for PrmAccountRoyaltyView1.
     * @return PrmAccountRoyaltyView1
     */
    public ViewObjectImpl getPrmAccountRoyaltyView1() {
        return (ViewObjectImpl)findViewObject("PrmAccountRoyaltyView1");
    }

    /**
     * Container's getter for PrmAllianceManagerView1.
     * @return PrmAllianceManagerView1
     */
    public ViewObjectImpl getPrmAllianceManagerView1() {
        return (ViewObjectImpl)findViewObject("PrmAllianceManagerView1");
    }

    /**
     * Container's getter for PrmOpportunityStatusView1.
     * @return PrmOpportunityStatusView1
     */
    public ViewObjectImpl getPrmOpportunityStatusView1() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityStatusView1");
    }


    /**
     * Container's getter for KeyAccountActionView1.
     * @return KeyAccountActionView1
     */
    public ViewObjectImpl getKeyAccountActionView1() {
        return (ViewObjectImpl)findViewObject("KeyAccountActionView1");
    }

    /**
     * Container's getter for TraxContractRightView1.
     * @return TraxContractRightView1
     */
    public ViewObjectImpl getTraxContractRightView1() {
        return (ViewObjectImpl)findViewObject("TraxContractRightView1");
    }

    /**
     * Container's getter for PrmTargetedFormatView1.
     * @return PrmTargetedFormatView1
     */
    public ViewObjectImpl getPrmTargetedFormatView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetedFormatView1");
    }


    /**
     * Container's getter for TraxRoyaltyRateView2.
     * @return TraxRoyaltyRateView2
     */
    public ViewObjectImpl getTraxRoyaltyRateView2() {
        return (ViewObjectImpl)findViewObject("TraxRoyaltyRateView2");
    }

    /**
     * Container's getter for PrmOpportunityFkLink1.
     * @return PrmOpportunityFkLink1
     */
    public ViewLinkImpl getPrmOpportunityFkLink1() {
        return (ViewLinkImpl)findViewLink("PrmOpportunityFkLink1");
    }

    /**
     * Container's getter for PrmOpportunityFkLink2.
     * @return PrmOpportunityFkLink2
     */
    public ViewLinkImpl getPrmOpportunityFkLink2() {
        return (ViewLinkImpl)findViewLink("PrmOpportunityFkLink2");
    }

    /**
     * Container's getter for ContentOwnerToContractLink1.
     * @return ContentOwnerToContractLink1
     */
    public ViewLinkImpl getContentOwnerToContractLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToContractLink1");
    }

    /**
     * Container's getter for OpportunityToOpportunityAttachmentViewLink1.
     * @return OpportunityToOpportunityAttachmentViewLink1
     */
    public ViewLinkImpl getOpportunityToOpportunityAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToOpportunityAttachmentViewLink1");
    }

    /**
     * Container's getter for ContentOwnerToTitleViewLink1.
     * @return ContentOwnerToTitleViewLink1
     */
    public ViewLinkImpl getContentOwnerToTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToTitleViewLink1");
    }


    /**
     * Container's getter for ContentOwnerToKeyAccountNoteViewLink1.
     * @return ContentOwnerToKeyAccountNoteViewLink1
     */
    public ViewLinkImpl getContentOwnerToKeyAccountNoteViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToKeyAccountNoteViewLink1");
    }

    /**
     * Container's getter for TargetGroupToTargetGroupTitleViewLink1.
     * @return TargetGroupToTargetGroupTitleViewLink1
     */
    public ViewLinkImpl getTargetGroupToTargetGroupTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetGroupToTargetGroupTitleViewLink1");
    }

    /**
     * Container's getter for TargetGroupToTargetGroupProductViewLink1.
     * @return TargetGroupToTargetGroupProductViewLink1
     */
    public ViewLinkImpl getTargetGroupToTargetGroupProductViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetGroupToTargetGroupProductViewLink1");
    }

    /**
     * Container's getter for ContentOwnerToRoyaltiesViewLink1.
     * @return ContentOwnerToRoyaltiesViewLink1
     */
    public ViewLinkImpl getContentOwnerToRoyaltiesViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToRoyaltiesViewLink1");
    }

    /**
     * Container's getter for OpportunityToOpportunityStatusViewLink1.
     * @return OpportunityToOpportunityStatusViewLink1
     */
    public ViewLinkImpl getOpportunityToOpportunityStatusViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToOpportunityStatusViewLink1");
    }


    /**
     * Container's getter for ContentOwnerToKeyAccountsActionViewLink1.
     * @return ContentOwnerToKeyAccountsActionViewLink1
     */
    public ViewLinkImpl getContentOwnerToKeyAccountsActionViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToKeyAccountsActionViewLink1");
    }

    /**
     * Container's getter for ContractToContractRightViewLink1.
     * @return ContractToContractRightViewLink1
     */
    public ViewLinkImpl getContractToContractRightViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToContractRightViewLink1");
    }

    /**
     * Container's getter for TargetGroupProductToTargetedFormatViewLink1.
     * @return TargetGroupProductToTargetedFormatViewLink1
     */
    public ViewLinkImpl getTargetGroupProductToTargetedFormatViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetGroupProductToTargetedFormatViewLink1");
    }


    /**
     * Container's getter for ContractToRoyaltyRateViewLink1.
     * @return ContractToRoyaltyRateViewLink1
     */
    public ViewLinkImpl getContractToRoyaltyRateViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToRoyaltyRateViewLink1");
    }

    /**
     * Container's getter for JhsModelService.
     * @return JhsModelService
     */
    public ApplicationModuleImpl getJhsModelService() {
        return (ApplicationModuleImpl)findApplicationModule("JhsModelService");
    }

    public void targetTitlesToProducts() {
        String statusMessage = null;

        try {

            PrmTargetGroupViewImpl targetGroups =
                (PrmTargetGroupViewImpl)this.getPrmTargetGroupView1();
            PrmTargetGroupViewRowImpl targetGroup =
                (PrmTargetGroupViewRowImpl)targetGroups.getCurrentRow();

            if (targetGroup.getTitleCount() == 0 ||
                targetGroup.getProductCount() == 0) {
                statusMessage =
                        "Targeting Group needs both Titles and Products before running Targeting function.";
            } else {
                Number groupId = targetGroup.getId();
                Integer groupIdInt = new Integer(groupId.toString());

                String uName = this.getUsername();

                DatabaseProcedure targetTitlesToProductsProc =
                    DatabaseProcedure.define("procedure pk_prm_targeting_methods.target_titles_to_products" +
                                             "( p_group_id in number, p_username varchar2, p_status_code out number, p_status_message out varchar2)");
                DatabaseProcedure.Result result =
                    targetTitlesToProductsProc.call(this.getDBTransaction(),
                                                    groupIdInt, uName);

                statusMessage =
                        (String)result.getOutputValue("p_status_message");
                BigDecimal statusCode =
                    (BigDecimal)result.getOutputValue("p_status_code");

                if (statusCode.compareTo(new BigDecimal(0)) == 0) {
                    statusMessage = "Targeting Complete.";
                    this.getDBTransaction().commit();
                    this.getPrmTargetGroupView1().executeQuery();

                }
            }

            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage(statusMessage));
        } catch (Exception ex) {
            this.getDBTransaction().rollback();
            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage(ex.getMessage()));
        }
    }

    public void createTargetFromUlrichs() {
        try {

            TraxUlrichsTitleViewImpl ulrichsTitles =
                (TraxUlrichsTitleViewImpl)this.getTraxUlrichsTitleView1();
            TraxUlrichsTitleViewRowImpl ulrichsTitle =
                (TraxUlrichsTitleViewRowImpl)ulrichsTitles.getCurrentRow();

            Number ulrichsTitleId = ulrichsTitle.getId();
            Integer UlrichsTitleIdInt = new Integer(ulrichsTitleId.toString());

            String uName = this.getUsername();

            DatabaseProcedure createTargetFromUlrichsProc =
                DatabaseProcedure.define("procedure pk_prm_ulrichs_methods.create_target_from_ulrichs" +
                                         "( p_ulrichs_title_id in number, p_username varchar2)");
            DatabaseProcedure.Result result =
                createTargetFromUlrichsProc.call(this.getDBTransaction(),
                                                 UlrichsTitleIdInt, uName);

            this.getDBTransaction().commit();
            this.getTraxUlrichsTitleView1().executeQuery();

            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage("New target created."));
        } catch (Exception ex) {
            this.getDBTransaction().rollback();
            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage(ex.getMessage()));
        }
    } // createTargetFromUlrichs

    public void validateImportData(Number pFileId) {
        try {
            Integer importFileIdInt = new Integer(pFileId.toString());

            String uName = this.getUsername();

            DatabaseProcedure validateImportDataProc =
                DatabaseProcedure.define("procedure pk_trax_import_valid_methods.validate_import_data" +
                                         "( p_file_id in number, p_username varchar2)");

            DatabaseProcedure.Result result1 =
                validateImportDataProc.call(this.getDBTransaction(),
                                            importFileIdInt, uName);

            DatabaseProcedure matchImportDataProc =
                DatabaseProcedure.define("procedure pk_trax_import_matching.find_potential_matches" +
                                         "( p_file_id in number, p_username varchar2)");

            DatabaseProcedure.Result result2 =
                matchImportDataProc.call(this.getDBTransaction(),
                                         importFileIdInt, uName);

            this.getDBTransaction().commit();

            this.getTraxImportFileView1().executeQuery();

            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage("Import data validated and matched."));
        } catch (Exception ex) {
            this.getDBTransaction().rollback();
            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage(ex.getMessage()));
        }
    } // createTargetFromUlrichs

    public void forwardToApex() {
        /*
        Following is the process to call Apex reports without logging in to the Apex application.

        On click of "Reports" in PRM application:
        " Call PL/SQL function "Generate_token" with username as parameter
        " Function returns the token
        " Build the following URL
        o http://dtgoas301v.aa1.pqe:7777/pls/apex/f?p=103:1:: BRANCH_TO_PAGE_ACCEPT:::P101_USERNAME,P101_TOKEN:<username>,<token>
        " Forward to the URL
      */

        String uName = this.getUsername();

        DatabaseProcedure helloWorldProc =
            DatabaseProcedure.define("function generate_token(p_username in varchar2) return varchar2");
        String token =
            (String)helloWorldProc.call(this.getDBTransaction(), uName).getReturnValue();

        FacesContext fctx = FacesContext.getCurrentInstance();
        ExternalContext ectx = fctx.getExternalContext();

        String url = ectx.getInitParameter("APEX_URL");
        url = url.concat(uName).concat(",").concat(token);


        // Open the APEX site in a separate browser window
        ExtendedRenderKitService erks =
            Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        StringBuilder script = new StringBuilder();
        script.append("window.open('" + url + "', '', '');");
        erks.addScript(FacesContext.getCurrentInstance(), script.toString());

        //    try{
        //      ectx.redirect(url);
        //    } catch (IOException e) {
        //      //Can't redirect
        //      e.printStackTrace();
        //
        //    }
    }

    
    public String getUsername() {
        try {
            Object user = this.getUser();
            JhsUserContext userContext = (JhsUserContext)user;
            return userContext.getUserId();
        } catch (Exception ex) {
            return "TRACS";
        }
    }

    /**
     * Container's getter for PrmTargetedFormatView2.
     * @return PrmTargetedFormatView2
     */
    public ViewObjectImpl getPrmTargetedFormatView2() {
        return (ViewObjectImpl)findViewObject("PrmTargetedFormatView2");
    }

    /**
     * Container's getter for TargetedProductToTargetedFormatViewLink1.
     * @return TargetedProductToTargetedFormatViewLink1
     */
    public ViewLinkImpl getTargetedProductToTargetedFormatViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetedProductToTargetedFormatViewLink1");
    }


    /**
     * Container's getter for PrmTargetedProductTitleView1.
     * @return PrmTargetedProductTitleView1
     */
    public ViewObjectImpl getPrmTargetedProductTitleView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetedProductTitleView1");
    }

    /**
     * Container's getter for TargetedProductToTargetedProductTitleViewLink1.
     * @return TargetedProductToTargetedProductTitleViewLink1
     */
    public ViewLinkImpl getTargetedProductToTargetedProductTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetedProductToTargetedProductTitleViewLink1");
    }

    /**
     * Container's getter for TraxContractTitleView1.
     * @return TraxContractTitleView1
     */
    public ViewObjectImpl getTraxContractTitleView1() {
        return (ViewObjectImpl)findViewObject("TraxContractTitleView1");
    }

    /**
     * Container's getter for TraxContractGuaranteeView1.
     * @return TraxContractGuaranteeView1
     */
    public ViewObjectImpl getTraxContractGuaranteeView1() {
        return (ViewObjectImpl)findViewObject("TraxContractGuaranteeView1");
    }

    /**
     * Container's getter for TraxContactView1.
     * @return TraxContactView1
     */
    public ViewObjectImpl getTraxContactView1() {
        return (ViewObjectImpl)findViewObject("TraxContactView1");
    }

    /**
     * Container's getter for PrmOpportunityAttachmentView2.
     * @return PrmOpportunityAttachmentView2
     */
    public ViewObjectImpl getPrmOpportunityAttachmentView2() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityAttachmentView2");
    }


    /**
     * Container's getter for PrmAccountExclusiveView1.
     * @return PrmAccountExclusiveView1
     */
    public ViewObjectImpl getPrmAccountExclusiveView1() {
        return (ViewObjectImpl)findViewObject("PrmAccountExclusiveView1");
    }

    /**
     * Container's getter for ContractToContractTitleViewLink1.
     * @return ContractToContractTitleViewLink1
     */
    public ViewLinkImpl getContractToContractTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToContractTitleViewLink1");
    }

    /**
     * Container's getter for ContractToContractGuaranteeViewLink1.
     * @return ContractToContractGuaranteeViewLink1
     */
    public ViewLinkImpl getContractToContractGuaranteeViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToContractGuaranteeViewLink1");
    }


    /**
     * Container's getter for ContentOwnerToAccountExclusiveViewLink1.
     * @return ContentOwnerToAccountExclusiveViewLink1
     */
    public ViewLinkImpl getContentOwnerToAccountExclusiveViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToAccountExclusiveViewLink1");
    }


    /**
     * Container's getter for PMProductTargetStatusDashboardView1.
     * @return PMProductTargetStatusDashboardView1
     */
    public ViewObjectImpl getPMProductTargetStatusDashboardView1() {
        return (ViewObjectImpl)findViewObject("PMProductTargetStatusDashboardView1");
    }

    /**
     * Container's getter for PrmCampaignView1.
     * @return PrmCampaignView1
     */
    public ViewObjectImpl getPrmCampaignView1() {
        return (ViewObjectImpl)findViewObject("PrmCampaignView1");
    }

    /**
     * Container's getter for PrmCampaignOpportunityView1.
     * @return PrmCampaignOpportunityView1
     */
    public ViewObjectImpl getPrmCampaignOpportunityView1() {
        return (ViewObjectImpl)findViewObject("PrmCampaignOpportunityView1");
    }

    /**
     * Container's getter for CampaignToCampaignOpportunityViewLink1.
     * @return CampaignToCampaignOpportunityViewLink1
     */
    public ViewLinkImpl getCampaignToCampaignOpportunityViewLink1() {
        return (ViewLinkImpl)findViewLink("CampaignToCampaignOpportunityViewLink1");
    }

    /**
     * Container's getter for TraxContractNoteView1.
     * @return TraxContractNoteView1
     */
    public ViewObjectImpl getTraxContractNoteView1() {
        return (ViewObjectImpl)findViewObject("TraxContractNoteView1");
    }

    /**
     * Container's getter for ContractToContractNoteViewLink1.
     * @return ContractToContractNoteViewLink1
     */
    public ViewLinkImpl getContractToContractNoteViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToContractNoteViewLink1");
    }

    /**
     * Container's getter for TraxTitleRecordView1.
     * @return TraxTitleRecordView1
     */
    public ViewObjectImpl getTraxTitleRecordView1() {
        return (ViewObjectImpl)findViewObject("TraxTitleRecordView1");
    }

    /**
     * Container's getter for TitleToTitleRecordViewLink1.
     * @return TitleToTitleRecordViewLink1
     */
    public ViewLinkImpl getTitleToTitleRecordViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleRecordViewLink1");
    }

    /**
     * Container's getter for TraxClassificationView1.
     * @return TraxClassificationView1
     */
    public ViewObjectImpl getTraxClassificationView1() {
        return (ViewObjectImpl)findViewObject("TraxClassificationView1");
    }

    /**
     * Container's getter for TitleToClassificationViewLink1.
     * @return TitleToClassificationViewLink1
     */
    public ViewLinkImpl getTitleToClassificationViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToClassificationViewLink1");
    }

    /**
     * Container's getter for TraxVaryingFormView1.
     * @return TraxVaryingFormView1
     */
    public ViewObjectImpl getTraxVaryingFormView1() {
        return (ViewObjectImpl)findViewObject("TraxVaryingFormView1");
    }

    /**
     * Container's getter for TitleToVaryingFormViewLink1.
     * @return TitleToVaryingFormViewLink1
     */
    public ViewLinkImpl getTitleToVaryingFormViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToVaryingFormViewLink1");
    }

    /**
     * Container's getter for TraxTitleSubjectView1.
     * @return TraxTitleSubjectView1
     */
    public ViewObjectImpl getTraxTitleSubjectView1() {
        return (ViewObjectImpl)findViewObject("TraxTitleSubjectView1");
    }

    /**
     * Container's getter for TitleToTitleSubjectViewLink1.
     * @return TitleToTitleSubjectViewLink1
     */
    public ViewLinkImpl getTitleToTitleSubjectViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleSubjectViewLink1");
    }


    /**
     * Container's getter for TraxContactMethodView1.
     * @return TraxContactMethodView1
     */
    public ViewObjectImpl getTraxContactMethodView1() {
        return (ViewObjectImpl)findViewObject("TraxContactMethodView1");
    }

    /**
     * Container's getter for ContactToContactMethodViewLink1.
     * @return ContactToContactMethodViewLink1
     */
    public ViewLinkImpl getContactToContactMethodViewLink1() {
        return (ViewLinkImpl)findViewLink("ContactToContactMethodViewLink1");
    }

    /**
     * Container's getter for AccountLookupView1.
     * @return AccountLookupView1
     */
    public ViewObjectImpl getAccountLookupView1() {
        return (ViewObjectImpl)findViewObject("AccountLookupView1");
    }

    /**
     * Container's getter for PrmTargetedMarketView1.
     * @return PrmTargetedMarketView1
     */
    public ViewObjectImpl getPrmTargetedMarketView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetedMarketView1");
    }

    /**
     * Container's getter for TargetedProductToTargetedMarketViewLink1.
     * @return TargetedProductToTargetedMarketViewLink1
     */
    public ViewLinkImpl getTargetedProductToTargetedMarketViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetedProductToTargetedMarketViewLink1");
    }

    /**
     * Container's getter for PrmTargetedMarketView2.
     * @return PrmTargetedMarketView2
     */
    public ViewObjectImpl getPrmTargetedMarketView2() {
        return (ViewObjectImpl)findViewObject("PrmTargetedMarketView2");
    }

    /**
     * Container's getter for TargetGroupProductToTargetedMarketViewLink1.
     * @return TargetGroupProductToTargetedMarketViewLink1
     */
    public ViewLinkImpl getTargetGroupProductToTargetedMarketViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetGroupProductToTargetedMarketViewLink1");
    }

    /**
     * Container's getter for PrmAllianceManagerAccountView1.
     * @return PrmAllianceManagerAccountView1
     */
    public ViewObjectImpl getPrmAllianceManagerAccountView1() {
        return (ViewObjectImpl)findViewObject("PrmAllianceManagerAccountView1");
    }

    /**
     * Container's getter for AllianceManagerToAllianceManagerAccountViewLink1.
     * @return AllianceManagerToAllianceManagerAccountViewLink1
     */
    public ViewLinkImpl getAllianceManagerToAllianceManagerAccountViewLink1() {
        return (ViewLinkImpl)findViewLink("AllianceManagerToAllianceManagerAccountViewLink1");
    }

    /**
     * Container's getter for PrmAllianceManagerOpportunityView1.
     * @return PrmAllianceManagerOpportunityView1
     */
    public ViewObjectImpl getPrmAllianceManagerOpportunityView1() {
        return (ViewObjectImpl)findViewObject("PrmAllianceManagerOpportunityView1");
    }

    /**
     * Container's getter for AllianceManagerToAllianceManaagerOpportunityViewLink1.
     * @return AllianceManagerToAllianceManaagerOpportunityViewLink1
     */
    public ViewLinkImpl getAllianceManagerToAllianceManaagerOpportunityViewLink1() {
        return (ViewLinkImpl)findViewLink("AllianceManagerToAllianceManaagerOpportunityViewLink1");
    }

    /**
     * Container's getter for PrmAccountAllianceManagerView1.
     * @return PrmAccountAllianceManagerView1
     */
    public ViewObjectImpl getPrmAccountAllianceManagerView1() {
        return (ViewObjectImpl)findViewObject("PrmAccountAllianceManagerView1");
    }

    /**
     * Container's getter for AccountToAccountAllianceManagerViewLink1.
     * @return AccountToAccountAllianceManagerViewLink1
     */
    public ViewLinkImpl getAccountToAccountAllianceManagerViewLink1() {
        return (ViewLinkImpl)findViewLink("AccountToAccountAllianceManagerViewLink1");
    }


    /**
     * Container's getter for PrmOpportunityTargetView1.
     * @return PrmOpportunityTargetView1
     */
    public ViewObjectImpl getPrmOpportunityTargetView1() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityTargetView1");
    }

    /**
     * Container's getter for OpportunityToOpportunityTargetViewLink1.
     * @return OpportunityToOpportunityTargetViewLink1
     */
    public ViewLinkImpl getOpportunityToOpportunityTargetViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToOpportunityTargetViewLink1");
    }

    /**
     * Container's getter for TraxContentOwnerContactView1.
     * @return TraxContentOwnerContactView1
     */
    public ViewObjectImpl getTraxContentOwnerContactView1() {
        return (ViewObjectImpl)findViewObject("TraxContentOwnerContactView1");
    }

    /**
     * Container's getter for ContentOwnerToContentOwnerContactViewLink1.
     * @return ContentOwnerToContentOwnerContactViewLink1
     */
    public ViewLinkImpl getContentOwnerToContentOwnerContactViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToContentOwnerContactViewLink1");
    }


    /**
     * Container's getter for TraxAddressView1.
     * @return TraxAddressView1
     */
    public ViewObjectImpl getTraxAddressView1() {
        return (ViewObjectImpl)findViewObject("TraxAddressView1");
    }

    /**
     * Container's getter for AccountToAddressViewLink1.
     * @return AccountToAddressViewLink1
     */
    public ViewLinkImpl getAccountToAddressViewLink1() {
        return (ViewLinkImpl)findViewLink("AccountToAddressViewLink1");
    }

    /**
     * Container's getter for PrmOpportunityLookupView.
     * @return PrmOpportunityLookupView
     */
    public ViewObjectImpl getPrmOpportunityLookupView() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityLookupView");
    }

    /**
     * Container's getter for PrmCampaignAccountView1.
     * @return PrmCampaignAccountView1
     */
    public ViewObjectImpl getPrmCampaignAccountView1() {
        return (ViewObjectImpl)findViewObject("PrmCampaignAccountView1");
    }

    /**
     * Container's getter for CampaignToCampaignAccountViewLink1.
     * @return CampaignToCampaignAccountViewLink1
     */
    public ViewLinkImpl getCampaignToCampaignAccountViewLink1() {
        return (ViewLinkImpl)findViewLink("CampaignToCampaignAccountViewLink1");
    }

    /**
     * Container's getter for TraxContentOwnerEventView1.
     * @return TraxContentOwnerEventView1
     */
    public ViewObjectImpl getTraxContentOwnerEventView1() {
        return (ViewObjectImpl)findViewObject("TraxContentOwnerEventView1");
    }

    /**
     * Container's getter for ContentOwnerToEventContentOwnerViewLink1.
     * @return ContentOwnerToEventContentOwnerViewLink1
     */
    public ViewLinkImpl getContentOwnerToEventContentOwnerViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToEventContentOwnerViewLink1");
    }

    /**
     * Container's getter for PrmCampaignTitleView1.
     * @return PrmCampaignTitleView1
     */
    public ViewObjectImpl getPrmCampaignTitleView1() {
        return (ViewObjectImpl)findViewObject("PrmCampaignTitleView1");
    }

    /**
     * Container's getter for CampaignToCampaignTitleViewLink1.
     * @return CampaignToCampaignTitleViewLink1
     */
    public ViewLinkImpl getCampaignToCampaignTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("CampaignToCampaignTitleViewLink1");
    }

    /**
     * Container's getter for PrmCampaignProductView1.
     * @return PrmCampaignProductView1
     */
    public ViewObjectImpl getPrmCampaignProductView1() {
        return (ViewObjectImpl)findViewObject("PrmCampaignProductView1");
    }

    /**
     * Container's getter for CampaignToCampaignProductViewLink1.
     * @return CampaignToCampaignProductViewLink1
     */
    public ViewLinkImpl getCampaignToCampaignProductViewLink1() {
        return (ViewLinkImpl)findViewLink("CampaignToCampaignProductViewLink1");
    }

    /**
     * Container's getter for PrmOpportunityAllianceMgrView1.
     * @return PrmOpportunityAllianceMgrView1
     */
    public ViewObjectImpl getPrmOpportunityAllianceMgrView1() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityAllianceMgrView1");
    }

    /**
     * Container's getter for OpportunityToOpportunityAllianceMgrViewLink1.
     * @return OpportunityToOpportunityAllianceMgrViewLink1
     */
    public ViewLinkImpl getOpportunityToOpportunityAllianceMgrViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToOpportunityAllianceMgrViewLink1");
    }

    /**
     * Container's getter for PrmAccountActivityView1.
     * @return PrmAccountActivityView1
     */
    public ViewObjectImpl getPrmAccountActivityView1() {
        return (ViewObjectImpl)findViewObject("PrmAccountActivityView1");
    }

    /**
     * Container's getter for AccountToAccountActivityViewLink1.
     * @return AccountToAccountActivityViewLink1
     */
    public ViewLinkImpl getAccountToAccountActivityViewLink1() {
        return (ViewLinkImpl)findViewLink("AccountToAccountActivityViewLink1");
    }

    /**
     * Container's getter for TraxActivityView1.
     * @return TraxActivityView1
     */
    public ViewObjectImpl getTraxActivityView1() {
        return (ViewObjectImpl)findViewObject("TraxActivityView1");
    }

    /**
     * Container's getter for SubTypeLookupCodeView1.
     * @return SubTypeLookupCodeView1
     */
    public ViewObjectImpl getOpportunityReasonLookup() {
        return (ViewObjectImpl)findViewObject("OpportunityReasonLookup");
    }

    /**
     * Container's getter for LookupCodeView1.
     * @return LookupCodeView1
     */
    public ViewObjectImpl getOpportunityNegotiationStageLookup() {
        return (ViewObjectImpl)findViewObject("OpportunityNegotiationStageLookup");
    }


    /**
     * Container's getter for PrmProductManagerProductView1.
     * @return PrmProductManagerProductView1
     */
    public ViewObjectImpl getPrmProductManagerProductView1() {
        return (ViewObjectImpl)findViewObject("PrmProductManagerProductView1");
    }

    /**
     * Container's getter for ProductManagerToProductManagerProductViewLink1.
     * @return ProductManagerToProductManagerProductViewLink1
     */
    public ViewLinkImpl getProductManagerToProductManagerProductViewLink1() {
        return (ViewLinkImpl)findViewLink("ProductManagerToProductManagerProductViewLink1");
    }

    /**
     * Container's getter for PrmTitleTargetedProductView1.
     * @return PrmTitleTargetedProductView1
     */
    public ViewObjectImpl getPrmTitleTargetedProductView1() {
        return (ViewObjectImpl)findViewObject("PrmTitleTargetedProductView1");
    }

    /**
     * Container's getter for TitleToTitleTargetedProductViewLink1.
     * @return TitleToTitleTargetedProductViewLink1
     */
    public ViewLinkImpl getTitleToTitleTargetedProductViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleTargetedProductViewLink1");
    }


    /**
     * Container's getter for PrmTargetedTitleFormatView1.
     * @return PrmTargetedTitleFormatView1
     */
    public ViewObjectImpl getPrmTargetedTitleFormatView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetedTitleFormatView1");
    }

    /**
     * Container's getter for TitleTargetedProductToFormatViewLink1.
     * @return TitleTargetedProductToFormatViewLink1
     */
    public ViewLinkImpl getTitleTargetedProductToFormatViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleTargetedProductToFormatViewLink1");
    }

    /**
     * Container's getter for PrmTargetedTitleMarketView1.
     * @return PrmTargetedTitleMarketView1
     */
    public ViewObjectImpl getPrmTargetedTitleMarketView1() {
        return (ViewObjectImpl)findViewObject("PrmTargetedTitleMarketView1");
    }

    /**
     * Container's getter for TitleTargetedProductToMarketViewLink1.
     * @return TitleTargetedProductToMarketViewLink1
     */
    public ViewLinkImpl getTitleTargetedProductToMarketViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleTargetedProductToMarketViewLink1");
    }

    /**
     * Container's getter for PrmOpportunityAgreementDataView1.
     * @return PrmOpportunityAgreementDataView1
     */
    public ViewObjectImpl getPrmOpportunityAgreementDataView1() {
        return (ViewObjectImpl)findViewObject("PrmOpportunityAgreementDataView1");
    }

    /**
     * Container's getter for OpportunityToAgreementDataViewLink1.
     * @return OpportunityToAgreementDataViewLink1
     */
    public ViewLinkImpl getOpportunityToAgreementDataViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToAgreementDataViewLink1");
    }

    /**
     * Container's getter for ContractTemplateLookup1.
     * @return ContractTemplateLookup1
     */
    public ViewObjectImpl getContractTemplateLookup1() {
        return (ViewObjectImpl)findViewObject("ContractTemplateLookup1");
    }

    /**
     * Container's getter for TraxUlrichsTitleView1.
     * @return TraxUlrichsTitleView1
     */
    public PRMView getTraxUlrichsTitleView1() {
        return (PRMView)findViewObject("TraxUlrichsTitleView1");
    }

    /**
     * Container's getter for TraxUlrichsAbstractIndexView1.
     * @return TraxUlrichsAbstractIndexView1
     */
    public PRMView getTraxUlrichsAbstractIndexView1() {
        return (PRMView)findViewObject("TraxUlrichsAbstractIndexView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsAbstractIndexViewLink1.
     * @return UlrichsTitleToUlrichsAbstractIndexViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsAbstractIndexViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsAbstractIndexViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsClassificationView1.
     * @return TraxUlrichsClassificationView1
     */
    public PRMView getTraxUlrichsClassificationView1() {
        return (PRMView)findViewObject("TraxUlrichsClassificationView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsClassificationViewLink1.
     * @return UlrichsTitleToUlrichsClassificationViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsClassificationViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsClassificationViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsEditorView1.
     * @return TraxUlrichsEditorView1
     */
    public PRMView getTraxUlrichsEditorView1() {
        return (PRMView)findViewObject("TraxUlrichsEditorView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsEditorViewLink1.
     * @return UlrichsTitleToUlrichsEditorViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsEditorViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsEditorViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsLanguageView1.
     * @return TraxUlrichsLanguageView1
     */
    public PRMView getTraxUlrichsLanguageView1() {
        return (PRMView)findViewObject("TraxUlrichsLanguageView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsLanguageViewLink1.
     * @return UlrichsTitleToUlrichsLanguageViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsLanguageViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsLanguageViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsOnlineVendorView1.
     * @return TraxUlrichsOnlineVendorView1
     */
    public PRMView getTraxUlrichsOnlineVendorView1() {
        return (PRMView)findViewObject("TraxUlrichsOnlineVendorView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsOnlineVendorViewLink1.
     * @return UlrichsTitleToUlrichsOnlineVendorViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsOnlineVendorViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsOnlineVendorViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsPublisherView1.
     * @return TraxUlrichsPublisherView1
     */
    public PRMView getTraxUlrichsPublisherView1() {
        return (PRMView)findViewObject("TraxUlrichsPublisherView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsPublisherViewLink1.
     * @return UlrichsTitleToUlrichsPublisherViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsPublisherViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsPublisherViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsSubjectView1.
     * @return TraxUlrichsSubjectView1
     */
    public PRMView getTraxUlrichsSubjectView1() {
        return (PRMView)findViewObject("TraxUlrichsSubjectView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsSubjectViewLink1.
     * @return UlrichsTitleToUlrichsSubjectViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsSubjectViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsSubjectViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsVariantTitleView1.
     * @return TraxUlrichsVariantTitleView1
     */
    public PRMView getTraxUlrichsVariantTitleView1() {
        return (PRMView)findViewObject("TraxUlrichsVariantTitleView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsAlternateTitleViewLink1.
     * @return UlrichsTitleToUlrichsAlternateTitleViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsAlternateTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsAlternateTitleViewLink1");
    }

    /**
     * Container's getter for TraxUlrichsWireServiceView1.
     * @return TraxUlrichsWireServiceView1
     */
    public PRMView getTraxUlrichsWireServiceView1() {
        return (PRMView)findViewObject("TraxUlrichsWireServiceView1");
    }

    /**
     * Container's getter for UlrichsTitleToUlrichsWireServiceViewLink1.
     * @return UlrichsTitleToUlrichsWireServiceViewLink1
     */
    public ViewLinkImpl getUlrichsTitleToUlrichsWireServiceViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsTitleToUlrichsWireServiceViewLink1");
    }

    /**
     * Container's getter for UnifiedTitleSearchView1.
     * @return UnifiedTitleSearchView1
     */
    public PRMView getUnifiedTitleSearchView1() {
        return (PRMView)findViewObject("UnifiedTitleSearchView1");
    }

    /**
     * Container's getter for PrmTargetedProductTitleView2.
     * @return PrmTargetedProductTitleView2
     */
    public PRMView getPrmTargetedProductTitleView2() {
        return (PRMView)findViewObject("PrmTargetedProductTitleView2");
    }

    /**
     * Container's getter for TargetGroupToTargetedProductTitleViewLink1.
     * @return TargetGroupToTargetedProductTitleViewLink1
     */
    public ViewLinkImpl getTargetGroupToTargetedProductTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetGroupToTargetedProductTitleViewLink1");
    }

    /**
     * Container's getter for PrmProductTitleView1.
     * @return PrmProductTitleView1
     */
    public PRMView getPrmProductTitleView1() {
        return (PRMView)findViewObject("PrmProductTitleView1");
    }

    /**
     * Container's getter for ProductToProductTitleViewLink1.
     * @return ProductToProductTitleViewLink1
     */
    public ViewLinkImpl getProductToProductTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("ProductToProductTitleViewLink1");
    }

    /**
     * Container's getter for TraxActivityContentOwnerView1.
     * @return TraxActivityContentOwnerView1
     */
    public PRMView getTraxActivityContentOwnerView1() {
        return (PRMView)findViewObject("TraxActivityContentOwnerView1");
    }

    /**
     * Container's getter for ActivityToActivityContentOwnerViewLink1.
     * @return ActivityToActivityContentOwnerViewLink1
     */
    public ViewLinkImpl getActivityToActivityContentOwnerViewLink1() {
        return (ViewLinkImpl)findViewLink("ActivityToActivityContentOwnerViewLink1");
    }

    /**
     * Container's getter for PrmOpportunityActivityView1.
     * @return PrmOpportunityActivityView1
     */
    public PRMView getPrmOpportunityActivityView1() {
        return (PRMView)findViewObject("PrmOpportunityActivityView1");
    }

    /**
     * Container's getter for OpportunityToOpportunityActivityViewLink1.
     * @return OpportunityToOpportunityActivityViewLink1
     */
    public ViewLinkImpl getOpportunityToOpportunityActivityViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToOpportunityActivityViewLink1");
    }

    /**
     * Container's getter for TraxTitleContractRightView1.
     * @return TraxTitleContractRightView1
     */
    public PRMView getTraxTitleContractRightView1() {
        return (PRMView)findViewObject("TraxTitleContractRightView1");
    }

    /**
     * Container's getter for TitleToTitleContractRightViewLink1.
     * @return TitleToTitleContractRightViewLink1
     */
    public ViewLinkImpl getTitleToTitleContractRightViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleContractRightViewLink1");
    }

    /**
     * Container's getter for LookupCodeView1.
     * @return LookupCodeView1
     */
    public PRMView getContactMethodTypeLookup() {
        return (PRMView)findViewObject("ContactMethodTypeLookup");
    }

    /**
     * Container's getter for ContactMethodSubTypeLookup.
     * @return ContactMethodSubTypeLookup
     */
    public PRMView getContactMethodSubTypeLookup() {
        return (PRMView)findViewObject("ContactMethodSubTypeLookup");
    }

    /**
     * Container's getter for TraxTitleContractView1.
     * @return TraxTitleContractView1
     */
    public PRMView getTraxTitleContractView1() {
        return (PRMView)findViewObject("TraxTitleContractView1");
    }

    /**
     * Container's getter for TitleToTitleContractViewLink1.
     * @return TitleToTitleContractViewLink1
     */
    public ViewLinkImpl getTitleToTitleContractViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleContractViewLink1");
    }

    /**
     * Container's getter for PrmAccountContactMethodView1.
     * @return PrmAccountContactMethodView1
     */
    public PRMView getPrmAccountContactMethodView1() {
        return (PRMView)findViewObject("PrmAccountContactMethodView1");
    }

    /**
     * Container's getter for AccountToAccountContactMethodViewLink1.
     * @return AccountToAccountContactMethodViewLink1
     */
    public ViewLinkImpl getAccountToAccountContactMethodViewLink1() {
        return (ViewLinkImpl)findViewLink("AccountToAccountContactMethodViewLink1");
    }

    /**
     * Container's getter for DashboardUserView1.
     * @return DashboardUserView1
     */
    public PRMView getAMDashboardUserView() {
        return (PRMView)findViewObject("AMDashboardUserView");
    }

    /**
     * Container's getter for ActivityDashboardView1.
     * @return ActivityDashboardView1
     */
    public PRMView getActivityDashboardView1() {
        return (PRMView)findViewObject("ActivityDashboardView1");
    }

    /**
     * Container's getter for DashboardToActivityDashboardViewLink1.
     * @return DashboardToActivityDashboardViewLink1
     */
    public ViewLinkImpl getDashboardToActivityDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("DashboardToActivityDashboardViewLink1");
    }

    /**
     * Container's getter for AMAccountsDashboardView1.
     * @return AMAccountsDashboardView1
     */
    public PRMView getAMAccountsDashboardView1() {
        return (PRMView)findViewObject("AMAccountsDashboardView1");
    }

    /**
     * Container's getter for DashboardToAmAccountDashboardViewLink1.
     * @return DashboardToAmAccountDashboardViewLink1
     */
    public ViewLinkImpl getDashboardToAmAccountDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("DashboardToAmAccountDashboardViewLink1");
    }

    /**
     * Container's getter for AMOpportunityDashboardView1.
     * @return AMOpportunityDashboardView1
     */
    public PRMView getAMOpportunityDashboardView1() {
        return (PRMView)findViewObject("AMOpportunityDashboardView1");
    }

    /**
     * Container's getter for DashboardToAmOpportunityDashboardViewLink1.
     * @return DashboardToAmOpportunityDashboardViewLink1
     */
    public ViewLinkImpl getDashboardToAmOpportunityDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("DashboardToAmOpportunityDashboardViewLink1");
    }

    /**
     * Container's getter for AMReminderDashboardView1.
     * @return AMReminderDashboardView1
     */
    public PRMView getAMReminderDashboardView1() {
        return (PRMView)findViewObject("AMReminderDashboardView1");
    }

    /**
     * Container's getter for DashboardToAMReminderDashboardViewLink1.
     * @return DashboardToAMReminderDashboardViewLink1
     */
    public ViewLinkImpl getDashboardToAMReminderDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("DashboardToAMReminderDashboardViewLink1");
    }

    /**
     * Container's getter for DashboardUserView1.
     * @return DashboardUserView1
     */
    public PRMView getPMDashboardUserView() {
        return (PRMView)findViewObject("PMDashboardUserView");
    }

    /**
     * Container's getter for GCADashboardUserView.
     * @return GCADashboardUserView
     */
    public PRMView getGCADashboardUserView() {
        return (PRMView)findViewObject("GCADashboardUserView");
    }


    /**
     * Container's getter for TraxActivityTitleView1.
     * @return TraxActivityTitleView1
     */
    public PRMView getTraxActivityTitleView1() {
        return (PRMView)findViewObject("TraxActivityTitleView1");
    }

    /**
     * Container's getter for ActivityToActivityTitleViewLink1.
     * @return ActivityToActivityTitleViewLink1
     */
    public ViewLinkImpl getActivityToActivityTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("ActivityToActivityTitleViewLink1");
    }

    /**
     * Container's getter for TraxActivityOpportunityView1.
     * @return TraxActivityOpportunityView1
     */
    public PRMView getTraxActivityOpportunityView1() {
        return (PRMView)findViewObject("TraxActivityOpportunityView1");
    }

    /**
     * Container's getter for ActivityToActivityOpportunityViewLink1.
     * @return ActivityToActivityOpportunityViewLink1
     */
    public ViewLinkImpl getActivityToActivityOpportunityViewLink1() {
        return (ViewLinkImpl)findViewLink("ActivityToActivityOpportunityViewLink1");
    }

    /**
     * Container's getter for TraxActivityUserView1.
     * @return TraxActivityUserView1
     */
    public PRMView getTraxActivityUserView1() {
        return (PRMView)findViewObject("TraxActivityUserView1");
    }

    /**
     * Container's getter for ActivityToActivityUserViewLink1.
     * @return ActivityToActivityUserViewLink1
     */
    public ViewLinkImpl getActivityToActivityUserViewLink1() {
        return (ViewLinkImpl)findViewLink("ActivityToActivityUserViewLink1");
    }

    /**
     * Container's getter for JhsUsersLookup1.
     * @return JhsUsersLookup1
     */
    public PRMView getJhsUsersLookup1() {
        return (PRMView)findViewObject("JhsUsersLookup1");
    }

    /**
     * Container's getter for TraxEventUserView1.
     * @return TraxEventUserView1
     */
    public PRMView getTraxEventUserView1() {
        return (PRMView)findViewObject("TraxEventUserView1");
    }

    /**
     * Container's getter for EventToEventUserViewLink1.
     * @return EventToEventUserViewLink1
     */
    public ViewLinkImpl getEventToEventUserViewLink1() {
        return (ViewLinkImpl)findViewLink("EventToEventUserViewLink1");
    }

    /**
     * Container's getter for TraxRoyaltyInformationView1.
     * @return TraxRoyaltyInformationView1
     */
    public PRMView getTraxRoyaltyInformationView1() {
        return (PRMView)findViewObject("TraxRoyaltyInformationView1");
    }

    /**
     * Container's getter for ContractToRoyaltyInformationViewLink1.
     * @return ContractToRoyaltyInformationViewLink1
     */
    public ViewLinkImpl getContractToRoyaltyInformationViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToRoyaltyInformationViewLink1");
    }

    /**
     * Container's getter for TraxTitleActivityView1.
     * @return TraxTitleActivityView1
     */
    public PRMView getTraxTitleActivityView1() {
        return (PRMView)findViewObject("TraxTitleActivityView1");
    }

    /**
     * Container's getter for TitleToTitleActivityViewLink1.
     * @return TitleToTitleActivityViewLink1
     */
    public ViewLinkImpl getTitleToTitleActivityViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleActivityViewLink1");
    }

    /**
     * Container's getter for TraxContractActivityView1.
     * @return TraxContractActivityView1
     */
    public PRMView getTraxContractActivityView1() {
        return (PRMView)findViewObject("TraxContractActivityView1");
    }

    /**
     * Container's getter for ContractToContractActivityViewLink1.
     * @return ContractToContractActivityViewLink1
     */
    public ViewLinkImpl getContractToContractActivityViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToContractActivityViewLink1");
    }


    /**
     * Container's getter for AgreementContactLookup.
     * @return AgreementContactLookup
     */
    public PRMView getAgreementContactLookup() {
        return (PRMView)findViewObject("AgreementContactLookup");
    }

    /**
     * Container's getter for QAContactLookup.
     * @return QAContactLookup
     */
    public PRMView getQAContactLookup() {
        return (PRMView)findViewObject("QAContactLookup");
    }

    /**
     * Container's getter for RoyaltyContactLookup.
     * @return RoyaltyContactLookup
     */
    public PRMView getRoyaltyContactLookup() {
        return (PRMView)findViewObject("RoyaltyContactLookup");
    }

    /**
     * Container's getter for TechnicalContactLookup.
     * @return TechnicalContactLookup
     */
    public PRMView getTechnicalContactLookup() {
        return (PRMView)findViewObject("TechnicalContactLookup");
    }

    /**
     * Container's getter for TraxContractAttachmentView1.
     * @return TraxContractAttachmentView1
     */
    public PRMView getTraxContractAttachmentView1() {
        return (PRMView)findViewObject("TraxContractAttachmentView1");
    }

    /**
     * Container's getter for ContractToAttachmentViewLink1.
     * @return ContractToAttachmentViewLink1
     */
    public ViewLinkImpl getContractToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("ContractToAttachmentViewLink1");
    }

    /**
     * Container's getter for PrmAgreementDataAttachmentView1.
     * @return PrmAgreementDataAttachmentView1
     */
    public PRMView getPrmAgreementDataAttachmentView1() {
        return (PRMView)findViewObject("PrmAgreementDataAttachmentView1");
    }

    /**
     * Container's getter for AgreementDataToAttachmentViewLink1.
     * @return AgreementDataToAttachmentViewLink1
     */
    public ViewLinkImpl getAgreementDataToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("AgreementDataToAttachmentViewLink1");
    }

    /**
     * Container's getter for TraxActivityAttachmentView1.
     * @return TraxActivityAttachmentView1
     */
    public PRMView getTraxActivityAttachmentView1() {
        return (PRMView)findViewObject("TraxActivityAttachmentView1");
    }

    /**
     * Container's getter for ActivityToAttachmentViewLink1.
     * @return ActivityToAttachmentViewLink1
     */
    public ViewLinkImpl getActivityToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("ActivityToAttachmentViewLink1");
    }

    /**
     * Container's getter for TraxContentOwnerAttachmentView1.
     * @return TraxContentOwnerAttachmentView1
     */
    public PRMView getTraxContentOwnerAttachmentView1() {
        return (PRMView)findViewObject("TraxContentOwnerAttachmentView1");
    }

    /**
     * Container's getter for ContentOwnerToAttachmentViewLink1.
     * @return ContentOwnerToAttachmentViewLink1
     */
    public ViewLinkImpl getContentOwnerToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToAttachmentViewLink1");
    }

    /**
     * Container's getter for TraxEventAttachmentView1.
     * @return TraxEventAttachmentView1
     */
    public PRMView getTraxEventAttachmentView1() {
        return (PRMView)findViewObject("TraxEventAttachmentView1");
    }

    /**
     * Container's getter for EventToAttachmentViewLink1.
     * @return EventToAttachmentViewLink1
     */
    public ViewLinkImpl getEventToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("EventToAttachmentViewLink1");
    }

    /**
     * Container's getter for TraxTitleAttachmentView1.
     * @return TraxTitleAttachmentView1
     */
    public PRMView getTraxTitleAttachmentView1() {
        return (PRMView)findViewObject("TraxTitleAttachmentView1");
    }

    /**
     * Container's getter for TitleToAttachmentViewLink1.
     * @return TitleToAttachmentViewLink1
     */
    public ViewLinkImpl getTitleToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToAttachmentViewLink1");
    }


    /**
     * Container's getter for myJhsUsersView1.
     * @return myJhsUsersView1
     */
    public JhsUsersViewImpl getmyJhsUsersView1() {
        return (JhsUsersViewImpl)findViewObject("myJhsUsersView1");
    }

    /**
     * Container's getter for TraxContactContentOwnerView1.
     * @return TraxContactContentOwnerView1
     */
    public PRMView getTraxContactContentOwnerView1() {
        return (PRMView)findViewObject("TraxContactContentOwnerView1");
    }

    /**
     * Container's getter for ContactToContentOwnerViewLink1.
     * @return ContactToContentOwnerViewLink1
     */
    public ViewLinkImpl getContactToContentOwnerViewLink1() {
        return (ViewLinkImpl)findViewLink("ContactToContentOwnerViewLink1");
    }

    /**
     * Container's getter for PrmTitleProductView1.
     * @return PrmTitleProductView1
     */
    public PRMView getPrmTitleProductView1() {
        return (PRMView)findViewObject("PrmTitleProductView1");
    }

    /**
     * Container's getter for TitleToTitleProductViewLink1.
     * @return TitleToTitleProductViewLink1
     */
    public ViewLinkImpl getTitleToTitleProductViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleProductViewLink1");
    }

    /**
     * Container's getter for LookupCodeView1.
     * @return LookupCodeView1
     */
    public PRMView getOpportunityTargetStatusLookup() {
        return (PRMView)findViewObject("OpportunityTargetStatusLookup");
    }

    /**
     * Container's getter for OpportunityTargetPriorityLookup.
     * @return OpportunityTargetPriorityLookup
     */
    public PRMView getOpportunityTargetPriorityLookup() {
        return (PRMView)findViewObject("OpportunityTargetPriorityLookup");
    }

    /**
     * Container's getter for OpportunityTargetTypeLookup.
     * @return OpportunityTargetTypeLookup
     */
    public PRMView getOpportunityTargetTypeLookup() {
        return (PRMView)findViewObject("OpportunityTargetTypeLookup");
    }

    public void updateTarget(Number targetId, String newStatus, String newType,
                             String newPriority) {

        String entityName = "com.pq.tracs.model.eo.PrmOpportunityTarget";
        // 1. Find the entity definition for the Product entity
        EntityDefImpl oppTargetDef = EntityDefImpl.findDefObject(entityName);
        // 2. Create a new instance of a Product entity
        PrmOpportunityTargetImpl oppTarget =
            (PrmOpportunityTargetImpl)oppTargetDef.findByPrimaryKey(getDBTransaction(),
                                                                    new Key(new Object[] { targetId }));

        // 3. Set attribute values
        if (newStatus != null) {
            oppTarget.setTargetStatus(newStatus);
        }

        PrmTargetedProductTitleImpl targetProduct =
            oppTarget.getPrmTargetedProductTitle();

        if (newType != null) {
            targetProduct.setTargetType(newType);
        }

        if (newPriority != null) {
            targetProduct.setTargetPriority(newPriority);
        }

        try {
            // 4. Commit the transaction
            getDBTransaction().commit();
        } catch (JboException ex) {
            getDBTransaction().rollback();
            throw ex;
        }

    }


    /**
     * Container's getter for PrmTargetedProductTitleLookup1.
     * @return PrmTargetedProductTitleLookup1
     */
    public PRMView getPrmTargetedProductTitleLookup1() {
        return (PRMView)findViewObject("PrmTargetedProductTitleLookup1");
    }

    /**
     * Container's getter for PrmOpportunityTargetAssignmentView1.
     * @return PrmOpportunityTargetAssignmentView1
     */
    public PRMView getPrmOpportunityTargetAssignmentView1() {
        return (PRMView)findViewObject("PrmOpportunityTargetAssignmentView1");
    }

    /**
     * Container's getter for OpportunityToTargetAssignmentViewLink1.
     * @return OpportunityToTargetAssignmentViewLink1
     */
    public ViewLinkImpl getOpportunityToTargetAssignmentViewLink1() {
        return (ViewLinkImpl)findViewLink("OpportunityToTargetAssignmentViewLink1");
    }

    /**
     * Container's getter for PrmTargetedProductLOV.
     * @return PrmTargetedProductLOV
     */
    public PRMView getPrmTargetedProductLOV() {
        return (PRMView)findViewObject("PrmTargetedProductLOV");
    }

    /**
     * Container's getter for TraxTitleNoteView1.
     * @return TraxTitleNoteView1
     */
    public PRMView getTraxTitleNoteView1() {
        return (PRMView)findViewObject("TraxTitleNoteView1");
    }

    /**
     * Container's getter for TitleToTitleNoteViewLink1.
     * @return TitleToTitleNoteViewLink1
     */
    public ViewLinkImpl getTitleToTitleNoteViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToTitleNoteViewLink1");
    }

    /**
     * Container's getter for TraxContactLOV.
     * @return TraxContactLOV
     */
    public PRMView getTraxContactLOV() {
        return (PRMView)findViewObject("TraxContactLOV");
    }


    /**
     * @param accountId  Id of the content owner that is being re-assigned
     * @param newAMId    Id of the new Alliance Manager
     * @param oldAMId    Id of the old Account Alliance Manager intersection
     */
    public void reAssignAccounts(Number accountId, Number newAMId,
                                 Number oldAMId) {
        String entityName = "com.pq.tracs.model.eo.PrmAccountAllianceManager";
        // 1. Find the entity definition for the AccountAM entity
        EntityDefImpl accountAMDef = EntityDefImpl.findDefObject(entityName);
        // 2. Create a new instance of a AccountAM entity
        PrmAccountAllianceManagerImpl newAccountAM =
            (PrmAccountAllianceManagerImpl)accountAMDef.createInstance2(getDBTransaction(),
                                                                        null);

        // get the old AccountAM entity
        PrmAccountAllianceManagerImpl oldAccountAM =
            (PrmAccountAllianceManagerImpl)accountAMDef.findByPrimaryKey(getDBTransaction(),
                                                                         new Key(new Object[] { oldAMId }));

        try {
            // 3. Set attribute values
            oldAccountAM.setEndDate((Date)Date.getCurrentDate());

            newAccountAM.setContentOwnerId(accountId);
            newAccountAM.setPrmAllianceManagerId(newAMId);
            newAccountAM.setStartDate((Date)Date.getCurrentDate());

            // 4. Commit the transaction
            getDBTransaction().commit();
        } catch (JboException ex) {
            getDBTransaction().rollback();
            throw ex;
        }
    }

    public void reAssignOpportunities(Number opportunityId, Number newAMId,
                                      Number oldAMId) {
        String entityName = "com.pq.tracs.model.eo.PrmOpportunityAllianceMgr";
        // 1. Find the entity definition for the AccountAM entity
        EntityDefImpl opportunityAMDef =
            EntityDefImpl.findDefObject(entityName);
        // 2. Create a new instance of a AccountAM entity
        PrmOpportunityAllianceMgrImpl newOpportunityAM =
            (PrmOpportunityAllianceMgrImpl)opportunityAMDef.createInstance2(getDBTransaction(),
                                                                            null);

        // get the old AccountAM entity
        PrmOpportunityAllianceMgrImpl oldOpportunityAM =
            (PrmOpportunityAllianceMgrImpl)opportunityAMDef.findByPrimaryKey(getDBTransaction(),
                                                                             new Key(new Object[] { oldAMId }));

        try {
            // 3. Set attribute values
            oldOpportunityAM.setEndDate((Date)Date.getCurrentDate());

            newOpportunityAM.setPrmOpportunityId(opportunityId);
            newOpportunityAM.setPrmAllianceManagerId(newAMId);
            newOpportunityAM.setStartDate((Date)Date.getCurrentDate());

            // 4. Commit the transaction
            getDBTransaction().commit();
        } catch (JboException ex) {
            getDBTransaction().rollback();
            throw ex;
        }
    }

    public void reAssignProducts(Number productId, Number newPMId,
                                 Number oldPMId) {
        String entityName = "com.pq.tracs.model.eo.PrmTargetedProductManager";
        // 1. Find the entity definition for the AccountAM entity
        EntityDefImpl productPMDef = EntityDefImpl.findDefObject(entityName);
        // 2. Create a new instance of a AccountAM entity
        PrmTargetedProductManagerImpl newProductPM =
            (PrmTargetedProductManagerImpl)productPMDef.createInstance2(getDBTransaction(),
                                                                        null);

        // get the old AccountAM entity
        PrmTargetedProductManagerImpl oldProductPM =
            (PrmTargetedProductManagerImpl)productPMDef.findByPrimaryKey(getDBTransaction(),
                                                                         new Key(new Object[] { oldPMId }));

        try {
            // 3. Set attribute values
            oldProductPM.setRemovedDate((Date)Date.getCurrentDate());

            newProductPM.setPrmTargetedProductId(productId);
            newProductPM.setPrmUserId(newPMId);
            newProductPM.setAddedDate((Date)Date.getCurrentDate());

            // 4. Commit the transaction
            getDBTransaction().commit();
        } catch (JboException ex) {
            getDBTransaction().rollback();
            throw ex;
        }
    }

    /**
     * Container's getter for AllianceManagerLookup1.
     * @return AllianceManagerLookup1
     */
    public PRMView getReassignAllianceManagerLookup() {
        return (PRMView)findViewObject("ReassignAllianceManagerLookup");
    }

    /**
     * Container's getter for AllianceManagerLOV.
     * @return AllianceManagerLOV
     */
    public PRMView getAllianceManagerLOV() {
        return (PRMView)findViewObject("AllianceManagerLOV");
    }

    /**
     * Container's getter for ProductManagerLookup1.
     * @return ProductManagerLookup1
     */
    public PRMView getReassignProductManagerLookup() {
        return (PRMView)findViewObject("ReassignProductManagerLookup");
    }

    /**
     * Container's getter for ProductManagerLOV.
     * @return ProductManagerLOV
     */
    public PRMView getProductManagerLOV() {
        return (PRMView)findViewObject("ProductManagerLOV");
    }

    public void deleteSelectedRows(Iterator selection, String viewForDelete) {
        ViewObjectImpl deleteView = null;

        deleteView = (ViewObjectImpl)this.findViewObject(viewForDelete);
        RowSetIterator rowSet = deleteView.getRowSetIterator();

        Key key;
        Row row;
        while (selection.hasNext()) {
            key = (Key)((List)selection.next()).get(0);
            row = rowSet.getRow(key);
            row.remove();
        }


        //committing the transaction
        this.getTransaction().commit();
        rowSet.closeRowSetIterator();
    }

    /**
     * Container's getter for RecentOpportunitiesDashboardView1.
     * @return RecentOpportunitiesDashboardView1
     */
    public PRMView getRecentOpportunitiesDashboardView1() {
        return (PRMView)findViewObject("RecentOpportunitiesDashboardView1");
    }

    /**
     * Container's getter for UserToRecentOpportunitiesDashboardViewLink1.
     * @return UserToRecentOpportunitiesDashboardViewLink1
     */
    public ViewLinkImpl getUserToRecentOpportunitiesDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("UserToRecentOpportunitiesDashboardViewLink1");
    }

    /**
     * Container's getter for RecentOpportunitiesDashboardView2.
     * @return RecentOpportunitiesDashboardView2
     */
    public PRMView getRecentOpportunitiesDashboardView2() {
        return (PRMView)findViewObject("RecentOpportunitiesDashboardView2");
    }

    /**
     * Container's getter for UserToRecentOpportunitiesDashboardViewLink2.
     * @return UserToRecentOpportunitiesDashboardViewLink2
     */
    public ViewLinkImpl getUserToRecentOpportunitiesDashboardViewLink2() {
        return (ViewLinkImpl)findViewLink("UserToRecentOpportunitiesDashboardViewLink2");
    }

    /**
     * Container's getter for PMExpiringTitleDashboardView2.
     * @return PMExpiringTitleDashboardView2
     */
    public PRMView getPMExpiringTitleDashboardView2() {
        return (PRMView)findViewObject("PMExpiringTitleDashboardView2");
    }

    /**
     * Container's getter for UserToExpiringTitleDashboardViewLink1.
     * @return UserToExpiringTitleDashboardViewLink1
     */
    public ViewLinkImpl getUserToExpiringTitleDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("UserToExpiringTitleDashboardViewLink1");
    }

    /**
     * Container's getter for TraxActivityView2.
     * @return TraxActivityView2
     */
    public PRMView getTraxActivityView2() {
        return (PRMView)findViewObject("TraxActivityView2");
    }

    /**
     * Container's getter for ContactToActivityViewLink1.
     * @return ContactToActivityViewLink1
     */
    public ViewLinkImpl getContactToActivityViewLink1() {
        return (ViewLinkImpl)findViewLink("ContactToActivityViewLink1");
    }

    /**
     * Container's getter for PMContentEvalDashboardView1.
     * @return PMContentEvalDashboardView1
     */
    public PRMView getPMContentEvalDashboardView1() {
        return (PRMView)findViewObject("PMContentEvalDashboardView1");
    }

    /**
     * Container's getter for UserToContentEvalDashboardViewLink1.
     * @return UserToContentEvalDashboardViewLink1
     */
    public ViewLinkImpl getUserToContentEvalDashboardViewLink1() {
        return (ViewLinkImpl)findViewLink("UserToContentEvalDashboardViewLink1");
    }

    /**
     * Container's getter for TitleOpportunityView1.
     * @return TitleOpportunityView1
     */
    public PRMView getTitleOpportunityView1() {
        return (PRMView)findViewObject("TitleOpportunityView1");
    }

    /**
     * Container's getter for TitleToROTitleOpportunityViewLink1.
     * @return TitleToROTitleOpportunityViewLink1
     */
    public ViewLinkImpl getTitleToROTitleOpportunityViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToROTitleOpportunityViewLink1");
    }

    public void setLastLoginForUser() {
        String sql =
            "update jhs_users set last_login_time = sysdate, last_login_app = 'PRM' where username = '" +
            this.getUsername() + "'";
        PreparedStatement setTime =
            this.getDBTransaction().createPreparedStatement(sql, 1);

        try {
            setTime.execute();
            this.getDBTransaction().commit();
        } catch (SQLException sqlEx) {
            sqlEx.printStackTrace();
        }
    }

    /**
     * Container's getter for TraxTitleIndexInclusionView1.
     * @return TraxTitleIndexInclusionView1
     */
    public PRMView getTraxTitleIndexInclusionView1() {
        return (PRMView)findViewObject("TraxTitleIndexInclusionView1");
    }

    /**
     * Container's getter for TitleToIndexInclusionViewLink1.
     * @return TitleToIndexInclusionViewLink1
     */
    public ViewLinkImpl getTitleToIndexInclusionViewLink1() {
        return (ViewLinkImpl)findViewLink("TitleToIndexInclusionViewLink1");
    }

    /**
     * Container's getter for TraxImportFileView1.
     * @return TraxImportFileView1
     */
    public PRMView getTraxImportFileView1() {
        return (PRMView)findViewObject("TraxImportFileView1");
    }

    /**
     * Container's getter for TraxImportDataParseView1.
     * @return TraxImportDataParseView1
     */
    public PRMView getTraxImportDataParseView1() {
        return (PRMView)findViewObject("TraxImportDataParseView1");
    }

    /**
     * Container's getter for ImportFileToDataParseViewLink1.
     * @return ImportFileToDataParseViewLink1
     */
    public ViewLinkImpl getImportFileToDataParseViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportFileToDataParseViewLink1");
    }

    /**
     * Container's getter for TraxImportPotentialMatchView1.
     * @return TraxImportPotentialMatchView1
     */
    public PRMView getTraxImportPotentialMatchView1() {
        return (PRMView)findViewObject("TraxImportPotentialMatchView1");
    }

    /**
     * Container's getter for ImportFileToPotentialMatchViewLink1.
     * @return ImportFileToPotentialMatchViewLink1
     */
    public ViewLinkImpl getImportFileToPotentialMatchViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportFileToPotentialMatchViewLink1");
    }

    /**
     * Container's getter for TraxImportValidationMessageView1.
     * @return TraxImportValidationMessageView1
     */
    public PRMView getTraxImportValidationMessageView1() {
        return (PRMView)findViewObject("TraxImportValidationMessageView1");
    }

    /**
     * Container's getter for ImportFileToValidationViewLink1.
     * @return ImportFileToValidationViewLink1
     */
    public ViewLinkImpl getImportFileToValidationViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportFileToValidationViewLink1");
    }


    /**
     * Container's getter for TraxImportPotentialMatchView2.
     * @return TraxImportPotentialMatchView2
     */
    public PRMView getTraxImportPotentialMatchView2() {
        return (PRMView)findViewObject("TraxImportPotentialMatchView2");
    }

    /**
     * Container's getter for ImportParseToPotentialMatchViewLink1.
     * @return ImportParseToPotentialMatchViewLink1
     */
    public ViewLinkImpl getImportParseToPotentialMatchViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportParseToPotentialMatchViewLink1");
    }

    /**
     * Container's getter for TraxImportValidationMessageView2.
     * @return TraxImportValidationMessageView2
     */
    public PRMView getTraxImportValidationMessageView2() {
        return (PRMView)findViewObject("TraxImportValidationMessageView2");
    }

    /**
     * Container's getter for ImportParseToValidationViewLink1.
     * @return ImportParseToValidationViewLink1
     */
    public ViewLinkImpl getImportParseToValidationViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportParseToValidationViewLink1");
    }

    public void saveImportData(Number pFileId) {

        try {
            Integer contractIdInt = new Integer(pFileId.toString());

            String uName = this.getUsername();

            DatabaseProcedure createContractFromOppProc =
                DatabaseProcedure.define("procedure pk_trax_import_methods.save_import_data" +
                                         "( p_file_id in number, p_username varchar2 )");

            DatabaseProcedure.Result result =
                createContractFromOppProc.call(this.getDBTransaction(),
                                               contractIdInt, uName);

            this.getDBTransaction().commit();

            this.getTraxImportFileView1().executeQuery();

            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage("Import Data Save Completed."));
        } catch (Exception ex) {
            ex.printStackTrace();
            this.getDBTransaction().rollback();
            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage(ex.getMessage()));
        }
    } // saveImportData

    /**
     * Container's getter for TraxImportParseErrorView1.
     * @return TraxImportParseErrorView1
     */
    public PRMView getTraxImportParseErrorView1() {
        return (PRMView)findViewObject("TraxImportParseErrorView1");
    }

    /**
     * Container's getter for ImportFileToParseErrorViewLink1.
     * @return ImportFileToParseErrorViewLink1
     */
    public ViewLinkImpl getImportFileToParseErrorViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportFileToParseErrorViewLink1");
    }

    /**
     * Container's getter for TraxImportResultsView1.
     * @return TraxImportResultsView1
     */
    public PRMView getTraxImportResultsView1() {
        return (PRMView)findViewObject("TraxImportResultsView1");
    }

    /**
     * Container's getter for ImportFileToImportResultsViewLink1.
     * @return ImportFileToImportResultsViewLink1
     */
    public ViewLinkImpl getImportFileToImportResultsViewLink1() {
        return (ViewLinkImpl)findViewLink("ImportFileToImportResultsViewLink1");
    }

    /**
     * Container's getter for TraxUnifSearchMaterialViewView1.
     * @return TraxUnifSearchMaterialViewView1
     */
    public PRMView getTraxUnifSearchMaterialViewView1() {
        return (PRMView)findViewObject("TraxUnifSearchMaterialViewView1");
    }

    /**
     * Container's getter for PMContentEvalDashboardView2.
     * @return PMContentEvalDashboardView2
     */
    public PRMView getPMContentEvalDashboardView2() {
        return (PRMView)findViewObject("PMContentEvalDashboardView2");
    }

    /**
     * Container's getter for TraxUlrichsTitleRelationView1.
     * @return TraxUlrichsTitleRelationView1
     */
    public PRMView getTraxUlrichsTitleRelationView1() {
        return (PRMView)findViewObject("TraxUlrichsTitleRelationView1");
    }

    /**
     * Container's getter for UserToContentEvalDashboardViewLink2.
     * @return UserToContentEvalDashboardViewLink2
     */
    public ViewLinkImpl getUserToContentEvalDashboardViewLink2() {
        return (ViewLinkImpl)findViewLink("UserToContentEvalDashboardViewLink2");
    }

    /**
     * Container's getter for UlrichsToTitleRelationViewLink1.
     * @return UlrichsToTitleRelationViewLink1
     */
    public ViewLinkImpl getUlrichsToTitleRelationViewLink1() {
        return (ViewLinkImpl)findViewLink("UlrichsToTitleRelationViewLink1");
    }

    /**
     * Container's getter for TraxContractView3.
     * @return TraxContractView3
     */
    public PRMView getTraxInactiveContractView() {
        return (PRMView)findViewObject("TraxInactiveContractView");
    }

    /**
     * Container's getter for ContentOwnerToContractViewLink1.
     * @return ContentOwnerToContractViewLink1
     */
    public ViewLinkImpl getContentOwnerToContractViewLink1() {
        return (ViewLinkImpl)findViewLink("ContentOwnerToContractViewLink1");
    }


    /**
     * Container's getter for PrmProductProductManagerView1.
     * @return PrmProductProductManagerView1
     */
    public PRMView getPrmProductProductManagerView1() {
        return (PRMView)findViewObject("PrmProductProductManagerView1");
    }

    /**
     * Container's getter for TargetedProductToProductManagerViewLink1.
     * @return TargetedProductToProductManagerViewLink1
     */
    public ViewLinkImpl getTargetedProductToProductManagerViewLink1() {
        return (ViewLinkImpl)findViewLink("TargetedProductToProductManagerViewLink1");
    }

    /**
     * Container's getter for PMContentEvalDashboardView3.
     * @return PMContentEvalDashboardView3
     */
    public PRMView getPMContentEvalDashboardView3() {
        return (PRMView)findViewObject("PMContentEvalDashboardView3");
    }

    /**
     * Container's getter for UserToContentEvalDashboardViewLink3.
     * @return UserToContentEvalDashboardViewLink3
     */
    public ViewLinkImpl getUserToContentEvalDashboardViewLink3() {
        return (ViewLinkImpl)findViewLink("UserToContentEvalDashboardViewLink3");
    }

    /**
     * Container's getter for PMContentEvalDashboardView4.
     * @return PMContentEvalDashboardView4
     */
    public PRMView getPMContentEvalDashboardView4() {
        return (PRMView)findViewObject("PMContentEvalDashboardView4");
    }

    /**
     * Container's getter for UserToContentEvalDashboardViewLink4.
     * @return UserToContentEvalDashboardViewLink4
     */
    public ViewLinkImpl getUserToContentEvalDashboardViewLink4() {
        return (ViewLinkImpl)findViewLink("UserToContentEvalDashboardViewLink4");
    }

    /**
     * Container's getter for AccountTitlesReadOnlyView1.
     * @return AccountTitlesReadOnlyView1
     */
    public PRMView getAccountTitlesReadOnlyView1() {
        return (PRMView)findViewObject("AccountTitlesReadOnlyView1");
    }

    /**
     * Container's getter for AccountToTitlesVL1.
     * @return AccountToTitlesVL1
     */
    public ViewLinkImpl getAccountToTitlesVL1() {
        return (ViewLinkImpl)findViewLink("AccountToTitlesVL1");
    }

    /**
     * Container's getter for PrmAccountProductDisciplineView1.
     * @return PrmAccountProductDisciplineView1
     */
    public PrmAccountProductDisciplineViewImpl getPrmAccountProductDisciplineView1() {
        return (PrmAccountProductDisciplineViewImpl)findViewObject("PrmAccountProductDisciplineView1");
    }

    /**
     * Container's getter for AccountToProductDisciplineViewLink1.
     * @return AccountToProductDisciplineViewLink1
     */
    public ViewLinkImpl getAccountToProductDisciplineViewLink1() {
        return (ViewLinkImpl)findViewLink("AccountToProductDisciplineViewLink1");
    }

    /**
     * Container's getter for NTCTitleView1.
     * @return NTCTitleView1
     */
    public NTCTitleViewImpl getNTCTitleView1() {
        return (NTCTitleViewImpl)findViewObject("NTCTitleView1");
    }

    /**
     * Container's getter for TraxActivityTitleView2.
     * @return TraxActivityTitleView2
     */
    public PRMView getTraxActivityTitleView2() {
        return (PRMView)findViewObject("TraxActivityTitleView2");
    }

    /**
     * Container's getter for NTCTitletoTitleViewLink1.
     * @return NTCTitletoTitleViewLink1
     */
    public ViewLinkImpl getNTCTitletoTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCTitletoTitleViewLink1");
    }

    /**
     * Container's getter for TraxActivityAttachmentView2.
     * @return TraxActivityAttachmentView2
     */
    public PRMView getTraxActivityAttachmentView2() {
        return (PRMView)findViewObject("TraxActivityAttachmentView2");
    }

    /**
     * Container's getter for NTCTitleToAttachmentViewLink1.
     * @return NTCTitleToAttachmentViewLink1
     */
    public ViewLinkImpl getNTCTitleToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCTitleToAttachmentViewLink1");
    }

    /**
     * Container's getter for NTCTitleLov1.
     * @return NTCTitleLov1
     */
    public PRMView getNTCTitleLov1() {
        return (PRMView)findViewObject("NTCTitleLov1");
    }

    /**
     * Container's getter for NTCActivityView1.
     * @return NTCActivityView1
     */
    public PRMView getNTCActivityView1() {
        return (PRMView)findViewObject("NTCActivityView1");
    }

    /**
     * Container's getter for TraxActivityAttachmentView3.
     * @return TraxActivityAttachmentView3
     */
    public PRMView getTraxActivityAttachmentView3() {
        return (PRMView)findViewObject("TraxActivityAttachmentView3");
    }

    /**
     * Container's getter for NTCActivityToAttachment1.
     * @return NTCActivityToAttachment1
     */
    public ViewLinkImpl getNTCActivityToAttachment1() {
        return (ViewLinkImpl)findViewLink("NTCActivityToAttachment1");
    }

    /**
     * Container's getter for TraxActivityTitleView3.
     * @return TraxActivityTitleView3
     */
    public PRMView getTraxActivityTitleView3() {
        return (PRMView)findViewObject("TraxActivityTitleView3");
    }

    /**
     * Container's getter for NTCActivityToTitleViewLink1.
     * @return NTCActivityToTitleViewLink1
     */
    public ViewLinkImpl getNTCActivityToTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCActivityToTitleViewLink1");
    }

    /**
     * Container's getter for TraxTitleChangeView1.
     * @return TraxTitleChangeView1
     */
    public PRMView getTraxTitleChangeView1() {
        return (PRMView)findViewObject("TraxTitleChangeView1");
    }

    /**
     * Container's getter for NTCActivityToTitleChangeViewLink1.
     * @return NTCActivityToTitleChangeViewLink1
     */
    public ViewLinkImpl getNTCActivityToTitleChangeViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCActivityToTitleChangeViewLink1");
    }

    /**
     * Container's getter for TraxPublisherChangeView1.
     * @return TraxPublisherChangeView1
     */
    public PRMView getTraxPublisherChangeView1() {
        return (PRMView)findViewObject("TraxPublisherChangeView1");
    }

    /**
     * Container's getter for NTCActivityToPublisherChangeViewLink1.
     * @return NTCActivityToPublisherChangeViewLink1
     */
    public ViewLinkImpl getNTCActivityToPublisherChangeViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCActivityToPublisherChangeViewLink1");
    }

    /**
     * Container's getter for NTCPublisherView1.
     * @return NTCPublisherView1
     */
    public PRMView getNTCPublisherView1() {
        return (PRMView)findViewObject("NTCPublisherView1");
    }

    /**
     * Container's getter for TraxActivityAttachmentView4.
     * @return TraxActivityAttachmentView4
     */
    public PRMView getTraxActivityAttachmentView4() {
        return (PRMView)findViewObject("TraxActivityAttachmentView4");
    }

    /**
     * Container's getter for NTCPublisherToAttachmentViewLink1.
     * @return NTCPublisherToAttachmentViewLink1
     */
    public ViewLinkImpl getNTCPublisherToAttachmentViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCPublisherToAttachmentViewLink1");
    }

    /**
     * Container's getter for TraxActivityTitleView4.
     * @return TraxActivityTitleView4
     */
    public PRMView getTraxActivityTitleView4() {
        return (PRMView)findViewObject("TraxActivityTitleView4");
    }

    /**
     * Container's getter for NTCPublisherToTitleViewLink1.
     * @return NTCPublisherToTitleViewLink1
     */
    public ViewLinkImpl getNTCPublisherToTitleViewLink1() {
        return (ViewLinkImpl)findViewLink("NTCPublisherToTitleViewLink1");
    }


    /**
     * Container's getter for NTCRightsView1.
     * @return NTCRightsView1
     */
    public PRMView getNTCRightsView1() {
        return (PRMView)findViewObject("NTCRightsView1");
    }

    /**
     * Container's getter for TraxActivityAttachmentView6.
     * @return TraxActivityAttachmentView6
     */
    public PRMView getTraxActivityAttachmentView6() {
        return (PRMView)findViewObject("TraxActivityAttachmentView6");
    }

    /**
     * Container's getter for NTCRightsToAttachmentViewLink2.
     * @return NTCRightsToAttachmentViewLink2
     */
    public ViewLinkImpl getNTCRightsToAttachmentViewLink2() {
        return (ViewLinkImpl)findViewLink("NTCRightsToAttachmentViewLink2");
    }

    /**
     * Container's getter for TraxActivityTitleView6.
     * @return TraxActivityTitleView6
     */
    public PRMView getTraxActivityTitleView6() {
        return (PRMView)findViewObject("TraxActivityTitleView6");
    }

    /**
     * Container's getter for NTCRightsToTitleViewLink2.
     * @return NTCRightsToTitleViewLink2
     */
    public ViewLinkImpl getNTCRightsToTitleViewLink2() {
        return (ViewLinkImpl)findViewLink("NTCRightsToTitleViewLink2");
    }
}
