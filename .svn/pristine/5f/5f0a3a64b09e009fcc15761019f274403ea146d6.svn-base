package com.pq.tracs.model.vo;

import com.pq.tracs.model.eo.TraxAddressImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 26 08:02:32 EDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxAddressViewRowImpl extends ViewRowImpl {
    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        if (this.getTraxContentOwnerView().getTraxAddressView().getRowCount() <= 1) {
            this.setPrimaryFlag("Y");
        }
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        AddressLine1 {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getAddressLine1();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setAddressLine1((String)value);
            }
        }
        ,
        AddressLine2 {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getAddressLine2();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setAddressLine2((String)value);
            }
        }
        ,
        City {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getCity();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setCity((String)value);
            }
        }
        ,
        StateOrProvince {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getStateOrProvince();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setStateOrProvince((String)value);
            }
        }
        ,
        ZipOrPostalCode {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getZipOrPostalCode();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setZipOrPostalCode((String)value);
            }
        }
        ,
        Country {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getCountry();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        County {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getCounty();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setCounty((String)value);
            }
        }
        ,
        PrimaryFlag {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getPrimaryFlag();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setPrimaryFlag((String)value);
            }
        }
        ,
        SiteOrDepartment {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getSiteOrDepartment();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setSiteOrDepartment((String)value);
            }
        }
        ,
        AddressComments {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getAddressComments();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setAddressComments((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        TraxContentOwnerView {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getTraxContentOwnerView();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CountryLookup {
            public Object get(TraxAddressViewRowImpl obj) {
                return obj.getCountryLookup();
            }

            public void put(TraxAddressViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxAddressViewRowImpl object);

        public abstract void put(TraxAddressViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int ADDRESSLINE1 = AttributesEnum.AddressLine1.index();
    public static final int ADDRESSLINE2 = AttributesEnum.AddressLine2.index();
    public static final int CITY = AttributesEnum.City.index();
    public static final int STATEORPROVINCE = AttributesEnum.StateOrProvince.index();
    public static final int ZIPORPOSTALCODE = AttributesEnum.ZipOrPostalCode.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int COUNTY = AttributesEnum.County.index();
    public static final int PRIMARYFLAG = AttributesEnum.PrimaryFlag.index();
    public static final int SITEORDEPARTMENT = AttributesEnum.SiteOrDepartment.index();
    public static final int ADDRESSCOMMENTS = AttributesEnum.AddressComments.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int TRAXCONTENTOWNERVIEW = AttributesEnum.TraxContentOwnerView.index();
    public static final int COUNTRYLOOKUP = AttributesEnum.CountryLookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxAddressViewRowImpl() {
    }

    /**
     * Gets TraxAddress entity object.
     * @return the TraxAddress
     */
    public TraxAddressImpl getTraxAddress() {
        return (TraxAddressImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @return the CONTENT_OWNER_ID
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @param value value to set the CONTENT_OWNER_ID
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for ADDRESS_LINE_1 using the alias name AddressLine1.
     * @return the ADDRESS_LINE_1
     */
    public String getAddressLine1() {
        return (String) getAttributeInternal(ADDRESSLINE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_LINE_1 using the alias name AddressLine1.
     * @param value value to set the ADDRESS_LINE_1
     */
    public void setAddressLine1(String value) {
        setAttributeInternal(ADDRESSLINE1, value);
    }

    /**
     * Gets the attribute value for ADDRESS_LINE_2 using the alias name AddressLine2.
     * @return the ADDRESS_LINE_2
     */
    public String getAddressLine2() {
        return (String) getAttributeInternal(ADDRESSLINE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_LINE_2 using the alias name AddressLine2.
     * @param value value to set the ADDRESS_LINE_2
     */
    public void setAddressLine2(String value) {
        setAttributeInternal(ADDRESSLINE2, value);
    }

    /**
     * Gets the attribute value for CITY using the alias name City.
     * @return the CITY
     */
    public String getCity() {
        return (String) getAttributeInternal(CITY);
    }

    /**
     * Sets <code>value</code> as attribute value for CITY using the alias name City.
     * @param value value to set the CITY
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**
     * Gets the attribute value for STATE_OR_PROVINCE using the alias name StateOrProvince.
     * @return the STATE_OR_PROVINCE
     */
    public String getStateOrProvince() {
        return (String) getAttributeInternal(STATEORPROVINCE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE_OR_PROVINCE using the alias name StateOrProvince.
     * @param value value to set the STATE_OR_PROVINCE
     */
    public void setStateOrProvince(String value) {
        setAttributeInternal(STATEORPROVINCE, value);
    }

    /**
     * Gets the attribute value for ZIP_OR_POSTAL_CODE using the alias name ZipOrPostalCode.
     * @return the ZIP_OR_POSTAL_CODE
     */
    public String getZipOrPostalCode() {
        return (String) getAttributeInternal(ZIPORPOSTALCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ZIP_OR_POSTAL_CODE using the alias name ZipOrPostalCode.
     * @param value value to set the ZIP_OR_POSTAL_CODE
     */
    public void setZipOrPostalCode(String value) {
        setAttributeInternal(ZIPORPOSTALCODE, value);
    }

    /**
     * Gets the attribute value for COUNTRY using the alias name Country.
     * @return the COUNTRY
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY using the alias name Country.
     * @param value value to set the COUNTRY
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for COUNTY using the alias name County.
     * @return the COUNTY
     */
    public String getCounty() {
        return (String) getAttributeInternal(COUNTY);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTY using the alias name County.
     * @param value value to set the COUNTY
     */
    public void setCounty(String value) {
        setAttributeInternal(COUNTY, value);
    }

    /**
     * Gets the attribute value for PRIMARY_FLAG using the alias name PrimaryFlag.
     * @return the PRIMARY_FLAG
     */
    public String getPrimaryFlag() {
        return (String) getAttributeInternal(PRIMARYFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIMARY_FLAG using the alias name PrimaryFlag.
     * @param value value to set the PRIMARY_FLAG
     */
    public void setPrimaryFlag(String value) {
        setAttributeInternal(PRIMARYFLAG, value);
    }

    /**
     * Gets the attribute value for SITE_OR_DEPARTMENT using the alias name SiteOrDepartment.
     * @return the SITE_OR_DEPARTMENT
     */
    public String getSiteOrDepartment() {
        return (String) getAttributeInternal(SITEORDEPARTMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for SITE_OR_DEPARTMENT using the alias name SiteOrDepartment.
     * @param value value to set the SITE_OR_DEPARTMENT
     */
    public void setSiteOrDepartment(String value) {
        setAttributeInternal(SITEORDEPARTMENT, value);
    }

    /**
     * Gets the attribute value for ADDRESS_COMMENTS using the alias name AddressComments.
     * @return the ADDRESS_COMMENTS
     */
    public String getAddressComments() {
        return (String) getAttributeInternal(ADDRESSCOMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_COMMENTS using the alias name AddressComments.
     * @param value value to set the ADDRESS_COMMENTS
     */
    public void setAddressComments(String value) {
        setAttributeInternal(ADDRESSCOMMENTS, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link TraxContentOwnerView.
     */
    public TraxContentOwnerViewRowImpl getTraxContentOwnerView() {
        return (TraxContentOwnerViewRowImpl)getAttributeInternal(TRAXCONTENTOWNERVIEW);
    }

    /**
     * Sets the master-detail link TraxContentOwnerView between this object and <code>value</code>.
     */
    public void setTraxContentOwnerView(Row value) {
        setAttributeInternal(TRAXCONTENTOWNERVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CountryLookup.
     */
    public RowSet getCountryLookup() {
        return (RowSet)getAttributeInternal(COUNTRYLOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
