package com.pq.tracs.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 20 12:40:01 EDT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxContentOwnerContactImpl extends PrmBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getId();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setId((Number)value);
            }
        },
        ContentOwnerId {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        },
        ContactId {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getContactId();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setContactId((Number)value);
            }
        },
        CreatedBy {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        },
        CreatedDate {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        },
        LastUpdatedBy {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        },
        LastUpdatedDate {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        },
        PrimaryFlag {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getPrimaryFlag();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setPrimaryFlag((String)value);
            }
        },
        ActiveFlag {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        },
        TraxContentOwner {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getTraxContentOwner();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setTraxContentOwner((TraxContentOwnerImpl)value);
            }
        },
        TraxContact {
            public Object get(TraxContentOwnerContactImpl obj) {
                return obj.getTraxContact();
            }

            public void put(TraxContentOwnerContactImpl obj, Object value) {
                obj.setTraxContact((TraxContactImpl)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxContentOwnerContactImpl object);

        public abstract void put(TraxContentOwnerContactImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID =
        AttributesEnum.ContentOwnerId.index();
    public static final int CONTACTID = AttributesEnum.ContactId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY =
        AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE =
        AttributesEnum.LastUpdatedDate.index();
    public static final int PRIMARYFLAG = AttributesEnum.PrimaryFlag.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int TRAXCONTENTOWNER =
        AttributesEnum.TraxContentOwner.index();
    public static final int TRAXCONTACT = AttributesEnum.TraxContact.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxContentOwnerContactImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ContentOwnerId, using the alias name ContentOwnerId.
     * @return the ContentOwnerId
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentOwnerId.
     * @param value value to set the ContentOwnerId
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for ContactId, using the alias name ContactId.
     * @return the ContactId
     */
    public Number getContactId() {
        return (Number)getAttributeInternal(CONTACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContactId.
     * @param value value to set the ContactId
     */
    public void setContactId(Number value) {
        setAttributeInternal(CONTACTID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for PrimaryFlag, using the alias name PrimaryFlag.
     * @return the PrimaryFlag
     */
    public String getPrimaryFlag() {
        return (String)getAttributeInternal(PRIMARYFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrimaryFlag.
     * @param value value to set the PrimaryFlag
     */
    public void setPrimaryFlag(String value) {
        setAttributeInternal(PRIMARYFLAG, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the ActiveFlag
     */
    public String getActiveFlag() {
        return (String)getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity TraxContentOwnerImpl.
     */
    public TraxContentOwnerImpl getTraxContentOwner() {
        return (TraxContentOwnerImpl)getAttributeInternal(TRAXCONTENTOWNER);
    }

    /**
     * Sets <code>value</code> as the associated entity TraxContentOwnerImpl.
     */
    public void setTraxContentOwner(TraxContentOwnerImpl value) {
        setAttributeInternal(TRAXCONTENTOWNER, value);
    }

    /**
     * @return the associated entity TraxContactImpl.
     */
    public TraxContactImpl getTraxContact() {
        return (TraxContactImpl)getAttributeInternal(TRAXCONTACT);
    }

    /**
     * Sets <code>value</code> as the associated entity TraxContactImpl.
     */
    public void setTraxContact(TraxContactImpl value) {
        setAttributeInternal(TRAXCONTACT, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("com.pq.tracs.model.eo.TraxContentOwnerContact");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
    
    protected void validateEntity() {
        super.validateEntity();
         
            if (this.getPrimaryFlag().equalsIgnoreCase("Y")) {
            // if primary flag is set on this record, then mark the title as invalid so it will validat the primary flags
            this.getTraxContentOwner().setInvalid();
        }
    }
    
    
    
}
