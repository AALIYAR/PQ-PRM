package com.pq.tracs.model.eo;

import java.math.BigDecimal;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jheadstart.util.DatabaseProcedure;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 20 15:49:08 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxActivityImpl extends PrmBaseEntity {
    private static EntityDefImpl mDefinitionObject;
    
    /**
     * Validation method for Type.
     */
  /*  public boolean validateType(String type) {
        if (type == null || type.equalsIgnoreCase("")) {
          return false;
        }
        return true;
    }

    @Override
    protected void prepareForDML(int operation, TransactionEvent e) {

        super.prepareForDML(operation, e);
        
        if (operation == EntityImpl.DML_INSERT && this.getType().contains("NTC")) {

            SequenceImpl seq =
                new SequenceImpl("TRAX_NTC_NUMBER_SEQ", getDBTransaction());
            this.setNtcNumber(seq.getSequenceNumber());

        }

    }  NTC Code  */ 
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        super.doDML(i, transactionEvent);

     /*   if (this.getType().contains("NTC")) {

            try {
                String uName = this.getLoginUserId();
               // int ntcIdInt = this.getId().intValue();
              // int pResult  = 0;
                
              Integer ntcIdInt = new Integer(this.getId().intValue());
                Integer pResult  = null ;
                
                
                String pResultMsg = null;
                FacesMessage.Severity severity;

                // call the database procedure to validate the NTC
                DatabaseProcedure validateNTCProc =
                    DatabaseProcedure.define("procedure pk_trax_ntc_methods.validate_ntc" +
                                             "( p_ntc_id in integer, p_username in varchar2, p_result_out out integer, p_result_msg out varchar2)");

                DatabaseProcedure.Result result =
                    validateNTCProc.call(this.getDBTransaction(), ntcIdInt,
                                         uName, pResult, pResultMsg);

                if (pResultMsg != null) {
                    // if any messages were generated display them to the user
                    if (pResult == 0) {
                        // if the result is 0 then there are only warnings
                        severity = FacesMessage.SEVERITY_WARN;
                    } else {
                        // if the result is other than 0, there were errors
                        severity = FacesMessage.SEVERITY_ERROR;
                    }
                    FacesContext.getCurrentInstance().addMessage(null,
                                                                 new FacesMessage(severity,
                                                                                  "Validation Message",
                                                                                  pResultMsg));
                }
            } catch (Exception ex) {
                FacesContext.getCurrentInstance().addMessage(null,
                                                             new FacesMessage(FacesMessage.SEVERITY_ERROR,
                                                                              "Validation Error",
                                                                              ex.getMessage()));
            }

        } NTC Code*/
    }
    
    
    
    

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxActivityImpl obj) {
                return obj.getId();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        Description {
            public Object get(TraxActivityImpl obj) {
                return obj.getDescription();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        Notes {
            public Object get(TraxActivityImpl obj) {
                return obj.getNotes();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        Type {
            public Object get(TraxActivityImpl obj) {
                return obj.getType();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        Status {
            public Object get(TraxActivityImpl obj) {
                return obj.getStatus();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Owner {
            public Object get(TraxActivityImpl obj) {
                return obj.getOwner();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setOwner((String)value);
            }
        }
        ,
        EmailText {
            public Object get(TraxActivityImpl obj) {
                return obj.getEmailText();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setEmailText((ClobDomain)value);
            }
        }
        ,
        Priority {
            public Object get(TraxActivityImpl obj) {
                return obj.getPriority();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setPriority((String)value);
            }
        }
        ,
        ExpectedStartDate {
            public Object get(TraxActivityImpl obj) {
                return obj.getExpectedStartDate();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setExpectedStartDate((Date)value);
            }
        }
        ,
        DueDate {
            public Object get(TraxActivityImpl obj) {
                return obj.getDueDate();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setDueDate((Date)value);
            }
        }
        ,
        ActualStartDate {
            public Object get(TraxActivityImpl obj) {
                return obj.getActualStartDate();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setActualStartDate((Date)value);
            }
        }
        ,
        CompletionDate {
            public Object get(TraxActivityImpl obj) {
                return obj.getCompletionDate();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setCompletionDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxActivityImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxActivityImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxActivityImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxActivityImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        SubType {
            public Object get(TraxActivityImpl obj) {
                return obj.getSubType();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setSubType((String)value);
            }
        }
        ,
        HoursSpent {
            public Object get(TraxActivityImpl obj) {
                return obj.getHoursSpent();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setHoursSpent((Number)value);
            }
        }
        ,
        ContactId {
            public Object get(TraxActivityImpl obj) {
                return obj.getContactId();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setContactId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TraxActivityImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        ContractId {
            public Object get(TraxActivityImpl obj) {
                return obj.getContractId();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setContractId((Number)value);
            }
        }
        ,
        TitleId {
            public Object get(TraxActivityImpl obj) {
                return obj.getTitleId();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setTitleId((Number)value);
            }
        }
        ,
        NtcPriority {
            public Object get(TraxActivityImpl obj) {
                return obj.getNtcPriority();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        NtcNumber {
            public Object get(TraxActivityImpl obj) {
                return obj.getNtcNumber();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityContentOwner {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxActivityContentOwner();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityOpportunity {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxActivityOpportunity();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityContract {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxActivityContract();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityTitle {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxActivityTitle();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityUser {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxActivityUser();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxEventActivity {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxEventActivity();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityAttachment {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxActivityAttachment();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxContact {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxContact();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setTraxContact((TraxContactImpl)value);
            }
        }
        ,
        TraxTitleChange {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxTitleChange();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleChange1 {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxTitleChange1();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxPublisherChange {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxPublisherChange();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxPublisherChange1 {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxPublisherChange1();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxRightsChange {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxRightsChange();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxRightChange {
            public Object get(TraxActivityImpl obj) {
                return obj.getTraxRightChange();
            }

            public void put(TraxActivityImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxActivityImpl object);

        public abstract void put(TraxActivityImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int OWNER = AttributesEnum.Owner.index();
    public static final int EMAILTEXT = AttributesEnum.EmailText.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int EXPECTEDSTARTDATE = AttributesEnum.ExpectedStartDate.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int ACTUALSTARTDATE = AttributesEnum.ActualStartDate.index();
    public static final int COMPLETIONDATE = AttributesEnum.CompletionDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int SUBTYPE = AttributesEnum.SubType.index();
    public static final int HOURSSPENT = AttributesEnum.HoursSpent.index();
    public static final int CONTACTID = AttributesEnum.ContactId.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int TITLEID = AttributesEnum.TitleId.index();
    public static final int NTCPRIORITY = AttributesEnum.NtcPriority.index();
    public static final int NTCNUMBER = AttributesEnum.NtcNumber.index();
    public static final int TRAXACTIVITYCONTENTOWNER = AttributesEnum.TraxActivityContentOwner.index();
    public static final int TRAXACTIVITYOPPORTUNITY = AttributesEnum.TraxActivityOpportunity.index();
    public static final int TRAXACTIVITYCONTRACT = AttributesEnum.TraxActivityContract.index();
    public static final int TRAXACTIVITYTITLE = AttributesEnum.TraxActivityTitle.index();
    public static final int TRAXACTIVITYUSER = AttributesEnum.TraxActivityUser.index();
    public static final int TRAXEVENTACTIVITY = AttributesEnum.TraxEventActivity.index();
    public static final int TRAXACTIVITYATTACHMENT = AttributesEnum.TraxActivityAttachment.index();
    public static final int TRAXCONTACT = AttributesEnum.TraxContact.index();
    public static final int TRAXTITLECHANGE = AttributesEnum.TraxTitleChange.index();
    public static final int TRAXTITLECHANGE1 = AttributesEnum.TraxTitleChange1.index();
    public static final int TRAXPUBLISHERCHANGE = AttributesEnum.TraxPublisherChange.index();
    public static final int TRAXPUBLISHERCHANGE1 = AttributesEnum.TraxPublisherChange1.index();
    public static final int TRAXRIGHTSCHANGE = AttributesEnum.TraxRightsChange.index();
    public static final int TRAXRIGHTCHANGE = AttributesEnum.TraxRightChange.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxActivityImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.eo.TraxActivity");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for Notes, using the alias name Notes.
     * @return the Notes
     */
    public String getNotes() {
        return (String)getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notes.
     * @param value value to set the Notes
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the Type
     */
    public String getType() {
        return (String)getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Owner, using the alias name Owner.
     * @return the Owner
     */
    public String getOwner() {
        return (String)getAttributeInternal(OWNER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Owner.
     * @param value value to set the Owner
     */
    public void setOwner(String value) {
        setAttributeInternal(OWNER, value);
    }

    /**
     * Gets the attribute value for EmailText, using the alias name EmailText.
     * @return the EmailText
     */
    public ClobDomain getEmailText() {
        return (ClobDomain)getAttributeInternal(EMAILTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailText.
     * @param value value to set the EmailText
     */
    public void setEmailText(ClobDomain value) {
        setAttributeInternal(EMAILTEXT, value);
    }

    /**
     * Gets the attribute value for Priority, using the alias name Priority.
     * @return the Priority
     */
    public String getPriority() {
        return (String)getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Priority.
     * @param value value to set the Priority
     */
    public void setPriority(String value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for ExpectedStartDate, using the alias name ExpectedStartDate.
     * @return the ExpectedStartDate
     */
    public Date getExpectedStartDate() {
        return (Date)getAttributeInternal(EXPECTEDSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpectedStartDate.
     * @param value value to set the ExpectedStartDate
     */
    public void setExpectedStartDate(Date value) {
        setAttributeInternal(EXPECTEDSTARTDATE, value);
    }

    /**
     * Gets the attribute value for DueDate, using the alias name DueDate.
     * @return the DueDate
     */
    public Date getDueDate() {
        return (Date)getAttributeInternal(DUEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DueDate.
     * @param value value to set the DueDate
     */
    public void setDueDate(Date value) {
        setAttributeInternal(DUEDATE, value);
    }

    /**
     * Gets the attribute value for ActualStartDate, using the alias name ActualStartDate.
     * @return the ActualStartDate
     */
    public Date getActualStartDate() {
        return (Date)getAttributeInternal(ACTUALSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualStartDate.
     * @param value value to set the ActualStartDate
     */
    public void setActualStartDate(Date value) {
        setAttributeInternal(ACTUALSTARTDATE, value);
    }

    /**
     * Gets the attribute value for CompletionDate, using the alias name CompletionDate.
     * @return the CompletionDate
     */
    public Date getCompletionDate() {
        return (Date)getAttributeInternal(COMPLETIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompletionDate.
     * @param value value to set the CompletionDate
     */
    public void setCompletionDate(Date value) {
        setAttributeInternal(COMPLETIONDATE, value);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for SubType, using the alias name SubType.
     * @return the SubType
     */
    public String getSubType() {
        return (String)getAttributeInternal(SUBTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubType.
     * @param value value to set the SubType
     */
    public void setSubType(String value) {
        setAttributeInternal(SUBTYPE, value);
    }

    /**
     * Gets the attribute value for HoursSpent, using the alias name HoursSpent.
     * @return the HoursSpent
     */
    public Number getHoursSpent() {
        return (Number)getAttributeInternal(HOURSSPENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoursSpent.
     * @param value value to set the HoursSpent
     */
    public void setHoursSpent(Number value) {
        setAttributeInternal(HOURSSPENT, value);
    }

    /**
     * Gets the attribute value for ContactId, using the alias name ContactId.
     * @return the ContactId
     */
    public Number getContactId() {
        return (Number)getAttributeInternal(CONTACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContactId.
     * @param value value to set the ContactId
     */
    public void setContactId(Number value) {
        setAttributeInternal(CONTACTID, value);
    }


    /**
     * Gets the attribute value for ContentOwnerId, using the alias name ContentOwnerId.
     * @return the ContentOwnerId
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentOwnerId.
     * @param value value to set the ContentOwnerId
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for ContractId, using the alias name ContractId.
     * @return the ContractId
     */
    public Number getContractId() {
        return (Number)getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractId.
     * @param value value to set the ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for TitleId, using the alias name TitleId.
     * @return the TitleId
     */
    public Number getTitleId() {
        return (Number)getAttributeInternal(TITLEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TitleId.
     * @param value value to set the TitleId
     */
    public void setTitleId(Number value) {
        setAttributeInternal(TITLEID, value);
    }

    /**
     * Gets the attribute value for NtcPriority, using the alias name NtcPriority.
     * @return the NtcPriority
     */
    public String getNtcPriority() {
        return (String)getAttributeInternal(NTCPRIORITY);
    }


    /**
     * Gets the attribute value for NtcNumber, using the alias name NtcNumber.
     * @return the NtcNumber
     */
    public Number getNtcNumber() {
        return (Number)getAttributeInternal(NTCNUMBER);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityContentOwner() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYCONTENTOWNER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityOpportunity() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYOPPORTUNITY);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityContract() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYCONTRACT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityTitle() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityUser() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYUSER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxEventActivity() {
        return (RowIterator)getAttributeInternal(TRAXEVENTACTIVITY);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityAttachment() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYATTACHMENT);
    }


    /**
     * @return the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public TraxContactImpl getTraxContact() {
        return (TraxContactImpl)getAttributeInternal(TRAXCONTACT);
    }

    /**
     * Sets <code>value</code> as the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public void setTraxContact(TraxContactImpl value) {
        setAttributeInternal(TRAXCONTACT, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleChange() {
        return (RowIterator)getAttributeInternal(TRAXTITLECHANGE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleChange1() {
        return (RowIterator)getAttributeInternal(TRAXTITLECHANGE1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxPublisherChange() {
        return (RowIterator)getAttributeInternal(TRAXPUBLISHERCHANGE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxPublisherChange1() {
        return (RowIterator)getAttributeInternal(TRAXPUBLISHERCHANGE1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxRightsChange() {
        return (RowIterator)getAttributeInternal(TRAXRIGHTSCHANGE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxRightChange() {
        return (RowIterator)getAttributeInternal(TRAXRIGHTCHANGE);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    protected void setInvalid() {
        super.setInvalid();
    }

    protected void validateEntity() {
        super.validateEntity();
    }

    /**
     * Validation method for TraxActivity.
     */
    public boolean validateTraxActivityUser() {
        RowIterator userIter = this.getTraxActivityUser();
        int i = 0;
        int j = 0;

        TraxActivityUserImpl actUser;
        while (j < userIter.getRowCount()) {
            actUser = (TraxActivityUserImpl)userIter.next();
            if ("Owner".equalsIgnoreCase(actUser.getUserType())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**
     * Validation method for TraxActivity.
     */
    public boolean validateTraxActivityOpportunity() {
        RowIterator opportunityIter = this.getTraxActivityOpportunity();
        int i = 0;
        int j = 0;

        TraxActivityOpportunityImpl actOppty;
        while (j < opportunityIter.getRowCount()) {
            actOppty = (TraxActivityOpportunityImpl)opportunityIter.next();
            if ("Y".equalsIgnoreCase(actOppty.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**
     * Validation method for TraxActivity.
     */
    public boolean validateTraxActivityContract() {
        RowIterator contractIter = this.getTraxActivityContract();
        int i = 0;
        int j = 0;

        TraxActivityContractImpl actContract;
        while (j < contractIter.getRowCount()) {
            actContract = (TraxActivityContractImpl)contractIter.next();
            if ("Y".equalsIgnoreCase(actContract.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**
     * Validation method for TraxActivity.
     */
    public boolean validateTraxActivityContentOwner() {
        RowIterator contentOwnerIter = this.getTraxActivityContentOwner();
        int i = 0;
        int j = 0;

        TraxActivityContentOwnerImpl actAccount;
        while (j < contentOwnerIter.getRowCount()) {
            actAccount = (TraxActivityContentOwnerImpl)contentOwnerIter.next();
            if ("Y".equalsIgnoreCase(actAccount.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**
     * Validation method for TraxActivity.
     */
    public boolean validateTraxActivityTitle() {
        RowIterator titleIter = this.getTraxActivityTitle();
        int i = 0;
        int j = 0;

        TraxActivityTitleImpl actTitle;
        while (j < titleIter.getRowCount()) {
            actTitle = (TraxActivityTitleImpl)titleIter.next();
            if ("Y".equalsIgnoreCase(actTitle.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
        
        
        this.setStatus("Open");
    }


}
