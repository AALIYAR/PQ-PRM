package com.pq.tracs.model.vo;

import com.pq.tracs.model.eo.PrmBaseEntity;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 18 08:33:42 EST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrmAccountProductDisciplineViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getId();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        ProductDiscipline {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getProductDiscipline();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setProductDiscipline((String)value);
            }
        }
        ,
        AccountCategory {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getAccountCategory();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setAccountCategory((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        Notes {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getNotes();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        PrmLookupModule_ProductDisciplineLookup1 {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getPrmLookupModule_ProductDisciplineLookup1();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrmLookupModule_AccountCategoryLookup1 {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getPrmLookupModule_AccountCategoryLookup1();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrmLookupModule_AccountPriorityLookup1 {
            public Object get(PrmAccountProductDisciplineViewRowImpl obj) {
                return obj.getPrmLookupModule_AccountPriorityLookup1();
            }

            public void put(PrmAccountProductDisciplineViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrmAccountProductDisciplineViewRowImpl object);

        public abstract void put(PrmAccountProductDisciplineViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int PRODUCTDISCIPLINE = AttributesEnum.ProductDiscipline.index();
    public static final int ACCOUNTCATEGORY = AttributesEnum.AccountCategory.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int PRMLOOKUPMODULE_PRODUCTDISCIPLINELOOKUP1 = AttributesEnum.PrmLookupModule_ProductDisciplineLookup1.index();
    public static final int PRMLOOKUPMODULE_ACCOUNTCATEGORYLOOKUP1 = AttributesEnum.PrmLookupModule_AccountCategoryLookup1.index();
    public static final int PRMLOOKUPMODULE_ACCOUNTPRIORITYLOOKUP1 = AttributesEnum.PrmLookupModule_AccountPriorityLookup1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrmAccountProductDisciplineViewRowImpl() {
    }

    /**
     * Gets PrmAccountProductDiscipline entity object.
     * @return the PrmAccountProductDiscipline
     */
    public PrmBaseEntity getPrmAccountProductDiscipline() {
        return (PrmBaseEntity)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @return the CONTENT_OWNER_ID
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @param value value to set the CONTENT_OWNER_ID
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for PRODUCT_DISCIPLINE using the alias name ProductDiscipline.
     * @return the PRODUCT_DISCIPLINE
     */
    public String getProductDiscipline() {
        return (String) getAttributeInternal(PRODUCTDISCIPLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_DISCIPLINE using the alias name ProductDiscipline.
     * @param value value to set the PRODUCT_DISCIPLINE
     */
    public void setProductDiscipline(String value) {
        setAttributeInternal(PRODUCTDISCIPLINE, value);
    }

    /**
     * Gets the attribute value for ACCOUNT_CATEGORY using the alias name AccountCategory.
     * @return the ACCOUNT_CATEGORY
     */
    public String getAccountCategory() {
        return (String) getAttributeInternal(ACCOUNTCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCOUNT_CATEGORY using the alias name AccountCategory.
     * @param value value to set the ACCOUNT_CATEGORY
     */
    public void setAccountCategory(String value) {
        setAttributeInternal(ACCOUNTCATEGORY, value);
    }


    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ACTIVE_FLAG using the alias name ActiveFlag.
     * @return the ACTIVE_FLAG
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE_FLAG using the alias name ActiveFlag.
     * @param value value to set the ACTIVE_FLAG
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PrmLookupModule_ProductDisciplineLookup1.
     */
    public RowSet getPrmLookupModule_ProductDisciplineLookup1() {
        return (RowSet)getAttributeInternal(PRMLOOKUPMODULE_PRODUCTDISCIPLINELOOKUP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PrmLookupModule_AccountCategoryLookup1.
     */
    public RowSet getPrmLookupModule_AccountCategoryLookup1() {
        return (RowSet)getAttributeInternal(PRMLOOKUPMODULE_ACCOUNTCATEGORYLOOKUP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PrmLookupModule_AccountPriorityLookup1.
     */
    public RowSet getPrmLookupModule_AccountPriorityLookup1() {
        return (RowSet)getAttributeInternal(PRMLOOKUPMODULE_ACCOUNTPRIORITYLOOKUP1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
