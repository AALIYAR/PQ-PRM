package com.pq.tracs.model.vo;

import com.pq.tracs.model.eo.TraxEventContentOwnerImpl;
import com.pq.tracs.model.eo.TraxEventImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.RowCreateException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 18 13:17:16 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxContentOwnerEventViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        EventId {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getEventId();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setEventId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        AddedDte {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getAddedDte();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setAddedDte((Date)value);
            }
        }
        ,
        RemovedDate {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getRemovedDate();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setRemovedDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        Id1 {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getId1();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setId1((Number)value);
            }
        }
        ,
        EventType {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getEventType();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setEventType((String)value);
            }
        }
        ,
        EventName {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getEventName();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setEventName((String)value);
            }
        }
        ,
        EventDate {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getEventDate();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setEventDate((Date)value);
            }
        }
        ,
        Note {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getNote();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setNote((String)value);
            }
        }
        ,
        Description {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        CreatedBy1 {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getCreatedBy1();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setCreatedBy1((String)value);
            }
        }
        ,
        CreatedDate1 {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getCreatedDate1();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setCreatedDate1((Date)value);
            }
        }
        ,
        LastUpdatedBy1 {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getLastUpdatedBy1();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedBy1((String)value);
            }
        }
        ,
        LastUpdatedDate1 {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getLastUpdatedDate1();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedDate1((Date)value);
            }
        }
        ,
        EventTypeLookup {
            public Object get(TraxContentOwnerEventViewRowImpl obj) {
                return obj.getEventTypeLookup();
            }

            public void put(TraxContentOwnerEventViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxContentOwnerEventViewRowImpl object);

        public abstract void put(TraxContentOwnerEventViewRowImpl object,
                                 Object value);

        public int index() {
            return TraxContentOwnerEventViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return TraxContentOwnerEventViewRowImpl.AttributesEnum.firstIndex() + TraxContentOwnerEventViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = TraxContentOwnerEventViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int EVENTID = AttributesEnum.EventId.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int ADDEDDTE = AttributesEnum.AddedDte.index();
    public static final int REMOVEDDATE = AttributesEnum.RemovedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int EVENTTYPE = AttributesEnum.EventType.index();
    public static final int EVENTNAME = AttributesEnum.EventName.index();
    public static final int EVENTDATE = AttributesEnum.EventDate.index();
    public static final int NOTE = AttributesEnum.Note.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CREATEDBY1 = AttributesEnum.CreatedBy1.index();
    public static final int CREATEDDATE1 = AttributesEnum.CreatedDate1.index();
    public static final int LASTUPDATEDBY1 = AttributesEnum.LastUpdatedBy1.index();
    public static final int LASTUPDATEDDATE1 = AttributesEnum.LastUpdatedDate1.index();
    public static final int EVENTTYPELOOKUP = AttributesEnum.EventTypeLookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxContentOwnerEventViewRowImpl() {
    }

    /**
     * Gets TraxEventContentOwner entity object.
     * @return the TraxEventContentOwner
     */
    public TraxEventContentOwnerImpl getTraxEventContentOwner() {
        return (TraxEventContentOwnerImpl)getEntity(0);
    }

    /**
     * Gets TraxEvent entity object.
     * @return the TraxEvent
     */
    public TraxEventImpl getTraxEvent() {
        return (TraxEventImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for EVENT_ID using the alias name EventId.
     * @return the EVENT_ID
     */
    public Number getEventId() {
        return (Number)getAttributeInternal(EVENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for EVENT_ID using the alias name EventId.
     * @param value value to set the EVENT_ID
     */
    public void setEventId(Number value) {
        setAttributeInternal(EVENTID, value);
    }

    /**
     * Gets the attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @return the CONTENT_OWNER_ID
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @param value value to set the CONTENT_OWNER_ID
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for ADDED_DTE using the alias name AddedDte.
     * @return the ADDED_DTE
     */
    public Date getAddedDte() {
        return (Date)getAttributeInternal(ADDEDDTE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDED_DTE using the alias name AddedDte.
     * @param value value to set the ADDED_DTE
     */
    public void setAddedDte(Date value) {
        setAttributeInternal(ADDEDDTE, value);
    }

    /**
     * Gets the attribute value for REMOVED_DATE using the alias name RemovedDate.
     * @return the REMOVED_DATE
     */
    public Date getRemovedDate() {
        return (Date)getAttributeInternal(REMOVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for REMOVED_DATE using the alias name RemovedDate.
     * @param value value to set the REMOVED_DATE
     */
    public void setRemovedDate(Date value) {
        setAttributeInternal(REMOVEDDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public Number getId1() {
        return (Number)getAttributeInternal(ID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id1.
     * @param value value to set the ID
     */
    public void setId1(Number value) {
        setAttributeInternal(ID1, value);
    }

    /**
     * Gets the attribute value for EVENT_TYPE using the alias name EventType.
     * @return the EVENT_TYPE
     */
    public String getEventType() {
        return (String) getAttributeInternal(EVENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVENT_TYPE using the alias name EventType.
     * @param value value to set the EVENT_TYPE
     */
    public void setEventType(String value) {
        setAttributeInternal(EVENTTYPE, value);
    }

    /**
     * Gets the attribute value for EVENT_NAME using the alias name EventName.
     * @return the EVENT_NAME
     */
    public String getEventName() {
        return (String) getAttributeInternal(EVENTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for EVENT_NAME using the alias name EventName.
     * @param value value to set the EVENT_NAME
     */
    public void setEventName(String value) {
        setAttributeInternal(EVENTNAME, value);
    }

    /**
     * Gets the attribute value for EVENT_DATE using the alias name EventDate.
     * @return the EVENT_DATE
     */
    public Date getEventDate() {
        return (Date)getAttributeInternal(EVENTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVENT_DATE using the alias name EventDate.
     * @param value value to set the EVENT_DATE
     */
    public void setEventDate(Date value) {
        setAttributeInternal(EVENTDATE, value);
    }

    /**
     * Gets the attribute value for NOTE using the alias name Note.
     * @return the NOTE
     */
    public String getNote() {
        return (String) getAttributeInternal(NOTE);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTE using the alias name Note.
     * @param value value to set the NOTE
     */
    public void setNote(String value) {
        setAttributeInternal(NOTE, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy1.
     * @return the CREATED_BY
     */
    public String getCreatedBy1() {
        return (String) getAttributeInternal(CREATEDBY1);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy1.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy1(String value) {
        setAttributeInternal(CREATEDBY1, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate1.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate1() {
        return (Date)getAttributeInternal(CREATEDDATE1);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate1.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate1(Date value) {
        setAttributeInternal(CREATEDDATE1, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy1.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy1() {
        return (String) getAttributeInternal(LASTUPDATEDBY1);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy1.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy1(String value) {
        setAttributeInternal(LASTUPDATEDBY1, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate1.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate1() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE1);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate1.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate1(Date value) {
        setAttributeInternal(LASTUPDATEDDATE1, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EventTypeLookup.
     */
    public RowSet getEventTypeLookup() {
        return (RowSet)getAttributeInternal(EVENTTYPELOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
  /**
     * By default, the framework will automatically create the new
     * underlying entity object instances that are related to this
     * view object row being created.
     *
     * We override this default view object row creation to explicitly
     * pre-populate the new (detail) TraxEventContentOwnerImpl instance using
     * the new (master) TraxEventImpl instance. Since all entity objects
     * implement the AttributeList interface, we can directly pass the
     * new SuppliersImpl instance to the ProductsImpl create()
     * method that accepts an AttributeList.
     */
    protected void create(AttributeList attributeList) {
      // The view row will already have created "blank" entity instances
      TraxEventImpl newEvent = getTraxEvent();
      TraxEventContentOwnerImpl newEventContentOwner = getTraxEventContentOwner();
      try {
          // Let event "blank" entity instance do programmatic defaulting
          newEvent.create(attributeList);
          // Let event content owner "blank" entity instance do programmatic
          // defaulting passing in new TraxEventImpl instance so its attributes
          // are available to the TraxEventContentOwnerImpl's create method.
          newEventContentOwner.create(newEvent);
          newEventContentOwner.setEventId(newEvent.getId());
       }
       catch (JboException ex) {
         newEvent.revert();
         newEventContentOwner.revert();      
         throw ex;
       }
       catch (Exception otherEx) {
         newEvent.revert();
         newEventContentOwner.revert();      
         throw new RowCreateException(true      /* EO Row? */,
                                      "Product" /* EO Name */,
                                      otherEx   /* Details */);
       }
    }
}
