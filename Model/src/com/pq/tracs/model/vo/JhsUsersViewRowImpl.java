package com.pq.tracs.model.vo;

import com.pq.tracs.model.eo.JhsUsersImpl;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 14 02:00:17 EST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JhsUsersViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getId();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setId((BigDecimal)value);
            }
        }
        ,
        FirstName {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        MiddleName {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getMiddleName();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setMiddleName((String)value);
            }
        }
        ,
        LastName {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getLastName();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        Alias {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getAlias();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setAlias((String)value);
            }
        }
        ,
        Username {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getUsername();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setUsername((String)value);
            }
        }
        ,
        DisplayName {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getDisplayName();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setDisplayName((String)value);
            }
        }
        ,
        EmailAddress {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getEmailAddress();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        Fax {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getFax();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setFax((String)value);
            }
        }
        ,
        HomePhone {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getHomePhone();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setHomePhone((String)value);
            }
        }
        ,
        JobTitle {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getJobTitle();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setJobTitle((String)value);
            }
        }
        ,
        CurrentPassword {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getCurrentPassword();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setCurrentPassword((String)value);
            }
        }
        ,
        NewPassword {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getNewPassword();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setNewPassword((String)value);
            }
        }
        ,
        Password {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getPassword();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        ReTypePassword {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getReTypePassword();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setReTypePassword((String)value);
            }
        }
        ,
        WorkPhone {
            public Object get(JhsUsersViewRowImpl obj) {
                return obj.getWorkPhone();
            }

            public void put(JhsUsersViewRowImpl obj, Object value) {
                obj.setWorkPhone((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(JhsUsersViewRowImpl object);

        public abstract void put(JhsUsersViewRowImpl object, Object value);

        public int index() {
            return JhsUsersViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return JhsUsersViewRowImpl.AttributesEnum.firstIndex() + JhsUsersViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = JhsUsersViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int ALIAS = AttributesEnum.Alias.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int DISPLAYNAME = AttributesEnum.DisplayName.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int FAX = AttributesEnum.Fax.index();
    public static final int HOMEPHONE = AttributesEnum.HomePhone.index();
    public static final int JOBTITLE = AttributesEnum.JobTitle.index();
    public static final int CURRENTPASSWORD = AttributesEnum.CurrentPassword.index();
    public static final int NEWPASSWORD = AttributesEnum.NewPassword.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int RETYPEPASSWORD = AttributesEnum.ReTypePassword.index();
    public static final int WORKPHONE = AttributesEnum.WorkPhone.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JhsUsersViewRowImpl() {
    }

    /**
     * Gets ExUSers entity object.
     * @return the ExUSers
     */
    public JhsUsersImpl getExUSers() {
        return (JhsUsersImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @return the MIDDLE_NAME
     */
    public String getMiddleName() {
        return (String) getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @param value value to set the MIDDLE_NAME
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for ALIAS using the alias name Alias.
     * @return the ALIAS
     */
    public String getAlias() {
        return (String) getAttributeInternal(ALIAS);
    }

    /**
     * Sets <code>value</code> as attribute value for ALIAS using the alias name Alias.
     * @param value value to set the ALIAS
     */
    public void setAlias(String value) {
        setAttributeInternal(ALIAS, value);
    }

    /**
     * Gets the attribute value for USERNAME using the alias name Username.
     * @return the USERNAME
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USERNAME using the alias name Username.
     * @param value value to set the USERNAME
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for DISPLAY_NAME using the alias name DisplayName.
     * @return the DISPLAY_NAME
     */
    public String getDisplayName() {
        return (String) getAttributeInternal(DISPLAYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DISPLAY_NAME using the alias name DisplayName.
     * @param value value to set the DISPLAY_NAME
     */
    public void setDisplayName(String value) {
        setAttributeInternal(DISPLAYNAME, value);
    }

    /**
     * Gets the attribute value for EMAIL_ADDRESS using the alias name EmailAddress.
     * @return the EMAIL_ADDRESS
     */
    public String getEmailAddress() {
        return (String) getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL_ADDRESS using the alias name EmailAddress.
     * @param value value to set the EMAIL_ADDRESS
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for FAX using the alias name Fax.
     * @return the FAX
     */
    public String getFax() {
        return (String) getAttributeInternal(FAX);
    }

    /**
     * Sets <code>value</code> as attribute value for FAX using the alias name Fax.
     * @param value value to set the FAX
     */
    public void setFax(String value) {
        setAttributeInternal(FAX, value);
    }

    /**
     * Gets the attribute value for HOME_PHONE using the alias name HomePhone.
     * @return the HOME_PHONE
     */
    public String getHomePhone() {
        return (String) getAttributeInternal(HOMEPHONE);
    }

    /**
     * Sets <code>value</code> as attribute value for HOME_PHONE using the alias name HomePhone.
     * @param value value to set the HOME_PHONE
     */
    public void setHomePhone(String value) {
        setAttributeInternal(HOMEPHONE, value);
    }

    /**
     * Gets the attribute value for JOB_TITLE using the alias name JobTitle.
     * @return the JOB_TITLE
     */
    public String getJobTitle() {
        return (String) getAttributeInternal(JOBTITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB_TITLE using the alias name JobTitle.
     * @param value value to set the JOB_TITLE
     */
    public void setJobTitle(String value) {
        setAttributeInternal(JOBTITLE, value);
    }

    /**
     * Gets the attribute value for CURRENT_PASSWORD using the alias name CurrentPassword.
     * @return the CURRENT_PASSWORD
     */
    public String getCurrentPassword() {
        return (String) getAttributeInternal(CURRENTPASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_PASSWORD using the alias name CurrentPassword.
     * @param value value to set the CURRENT_PASSWORD
     */
    public void setCurrentPassword(String value) {
        setAttributeInternal(CURRENTPASSWORD, value);
    }

    /**
     * Gets the attribute value for NEW_PASSWORD using the alias name NewPassword.
     * @return the NEW_PASSWORD
     */
    public String getNewPassword() {
        return (String) getAttributeInternal(NEWPASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for NEW_PASSWORD using the alias name NewPassword.
     * @param value value to set the NEW_PASSWORD
     */
    public void setNewPassword(String value) {
        setAttributeInternal(NEWPASSWORD, value);
    }

    /**
     * Gets the attribute value for PASSWORD using the alias name Password.
     * @return the PASSWORD
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD using the alias name Password.
     * @param value value to set the PASSWORD
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for RE_TYPE_PASSWORD using the alias name ReTypePassword.
     * @return the RE_TYPE_PASSWORD
     */
    public String getReTypePassword() {
        return (String) getAttributeInternal(RETYPEPASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for RE_TYPE_PASSWORD using the alias name ReTypePassword.
     * @param value value to set the RE_TYPE_PASSWORD
     */
    public void setReTypePassword(String value) {
        setAttributeInternal(RETYPEPASSWORD, value);
    }

    /**
     * Gets the attribute value for WORK_PHONE using the alias name WorkPhone.
     * @return the WORK_PHONE
     */
    public String getWorkPhone() {
        return (String) getAttributeInternal(WORKPHONE);
    }

    /**
     * Sets <code>value</code> as attribute value for WORK_PHONE using the alias name WorkPhone.
     * @param value value to set the WORK_PHONE
     */
    public void setWorkPhone(String value) {
        setAttributeInternal(WORKPHONE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
