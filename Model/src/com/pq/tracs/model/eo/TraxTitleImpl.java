package com.pq.tracs.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 04 06:00:16 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxTitleImpl extends PrmBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    private boolean isNew;


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxTitleImpl obj) {
                return obj.getId();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TraxTitleImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        LongTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getLongTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setLongTitle((String)value);
            }
        }
        ,
        ProductLine {
            public Object get(TraxTitleImpl obj) {
                return obj.getProductLine();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setProductLine((String)value);
            }
        }
        ,
        CatalogNumber {
            public Object get(TraxTitleImpl obj) {
                return obj.getCatalogNumber();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCatalogNumber((String)value);
            }
        }
        ,
        CatalogRoot {
            public Object get(TraxTitleImpl obj) {
                return obj.getCatalogRoot();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCatalogRoot((String)value);
            }
        }
        ,
        CatalogSuffix {
            public Object get(TraxTitleImpl obj) {
                return obj.getCatalogSuffix();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCatalogSuffix((String)value);
            }
        }
        ,
        Author {
            public Object get(TraxTitleImpl obj) {
                return obj.getAuthor();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAuthor((String)value);
            }
        }
        ,
        PublicationStartYear {
            public Object get(TraxTitleImpl obj) {
                return obj.getPublicationStartYear();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPublicationStartYear((String)value);
            }
        }
        ,
        PublicationEndYear {
            public Object get(TraxTitleImpl obj) {
                return obj.getPublicationEndYear();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPublicationEndYear((String)value);
            }
        }
        ,
        ShortTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getShortTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setShortTitle((String)value);
            }
        }
        ,
        FilmAvailability {
            public Object get(TraxTitleImpl obj) {
                return obj.getFilmAvailability();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setFilmAvailability((String)value);
            }
        }
        ,
        BibliographicStatus {
            public Object get(TraxTitleImpl obj) {
                return obj.getBibliographicStatus();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setBibliographicStatus((String)value);
            }
        }
        ,
        TitleDescription {
            public Object get(TraxTitleImpl obj) {
                return obj.getTitleDescription();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setTitleDescription((String)value);
            }
        }
        ,
        SecondaryCatalogNumber {
            public Object get(TraxTitleImpl obj) {
                return obj.getSecondaryCatalogNumber();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSecondaryCatalogNumber((String)value);
            }
        }
        ,
        OriginalPublishingCo {
            public Object get(TraxTitleImpl obj) {
                return obj.getOriginalPublishingCo();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setOriginalPublishingCo((String)value);
            }
        }
        ,
        OriginalPlaceOfPublication {
            public Object get(TraxTitleImpl obj) {
                return obj.getOriginalPlaceOfPublication();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setOriginalPlaceOfPublication((String)value);
            }
        }
        ,
        OriginalDatesOfPublication {
            public Object get(TraxTitleImpl obj) {
                return obj.getOriginalDatesOfPublication();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setOriginalDatesOfPublication((String)value);
            }
        }
        ,
        PlaceOfPublicationCode {
            public Object get(TraxTitleImpl obj) {
                return obj.getPlaceOfPublicationCode();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPlaceOfPublicationCode((String)value);
            }
        }
        ,
        LanguageNote {
            public Object get(TraxTitleImpl obj) {
                return obj.getLanguageNote();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setLanguageNote((String)value);
            }
        }
        ,
        ExercisingRights {
            public Object get(TraxTitleImpl obj) {
                return obj.getExercisingRights();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setExercisingRights((String)value);
            }
        }
        ,
        NonFilingIndicator {
            public Object get(TraxTitleImpl obj) {
                return obj.getNonFilingIndicator();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setNonFilingIndicator((String)value);
            }
        }
        ,
        EditionStatement {
            public Object get(TraxTitleImpl obj) {
                return obj.getEditionStatement();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setEditionStatement((String)value);
            }
        }
        ,
        AlphaRecordDates {
            public Object get(TraxTitleImpl obj) {
                return obj.getAlphaRecordDates();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAlphaRecordDates((String)value);
            }
        }
        ,
        PubYearVolumeFormatted {
            public Object get(TraxTitleImpl obj) {
                return obj.getPubYearVolumeFormatted();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPubYearVolumeFormatted((String)value);
            }
        }
        ,
        PubYearVolumeUnformatted {
            public Object get(TraxTitleImpl obj) {
                return obj.getPubYearVolumeUnformatted();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPubYearVolumeUnformatted((String)value);
            }
        }
        ,
        CatalogingSourceUrl {
            public Object get(TraxTitleImpl obj) {
                return obj.getCatalogingSourceUrl();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCatalogingSourceUrl((String)value);
            }
        }
        ,
        SerialSubType {
            public Object get(TraxTitleImpl obj) {
                return obj.getSerialSubType();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSerialSubType((String)value);
            }
        }
        ,
        PublicationFrequency {
            public Object get(TraxTitleImpl obj) {
                return obj.getPublicationFrequency();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPublicationFrequency((String)value);
            }
        }
        ,
        CatalogPublicationCity {
            public Object get(TraxTitleImpl obj) {
                return obj.getCatalogPublicationCity();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCatalogPublicationCity((String)value);
            }
        }
        ,
        CatalogIndicator {
            public Object get(TraxTitleImpl obj) {
                return obj.getCatalogIndicator();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCatalogIndicator((String)value);
            }
        }
        ,
        CheckInRequirements {
            public Object get(TraxTitleImpl obj) {
                return obj.getCheckInRequirements();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCheckInRequirements((String)value);
            }
        }
        ,
        Routing {
            public Object get(TraxTitleImpl obj) {
                return obj.getRouting();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setRouting((String)value);
            }
        }
        ,
        SpecialCopyright {
            public Object get(TraxTitleImpl obj) {
                return obj.getSpecialCopyright();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSpecialCopyright((String)value);
            }
        }
        ,
        CompSubAccountNumber {
            public Object get(TraxTitleImpl obj) {
                return obj.getCompSubAccountNumber();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCompSubAccountNumber((String)value);
            }
        }
        ,
        PaidSubAccountNumber {
            public Object get(TraxTitleImpl obj) {
                return obj.getPaidSubAccountNumber();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPaidSubAccountNumber((String)value);
            }
        }
        ,
        PrimaryPmClass {
            public Object get(TraxTitleImpl obj) {
                return obj.getPrimaryPmClass();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPrimaryPmClass((String)value);
            }
        }
        ,
        SecondaryPmClass {
            public Object get(TraxTitleImpl obj) {
                return obj.getSecondaryPmClass();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSecondaryPmClass((String)value);
            }
        }
        ,
        SourceCatalogVolumeNumber {
            public Object get(TraxTitleImpl obj) {
                return obj.getSourceCatalogVolumeNumber();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSourceCatalogVolumeNumber((String)value);
            }
        }
        ,
        NewspaperEditionFilmed {
            public Object get(TraxTitleImpl obj) {
                return obj.getNewspaperEditionFilmed();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setNewspaperEditionFilmed((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxTitleImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxTitleImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxTitleImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxTitleImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(TraxTitleImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        ContentType {
            public Object get(TraxTitleImpl obj) {
                return obj.getContentType();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setContentType((String)value);
            }
        }
        ,
        SubContentType {
            public Object get(TraxTitleImpl obj) {
                return obj.getSubContentType();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSubContentType((String)value);
            }
        }
        ,
        Enumeration {
            public Object get(TraxTitleImpl obj) {
                return obj.getEnumeration();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setEnumeration((String)value);
            }
        }
        ,
        NumberOfUnits {
            public Object get(TraxTitleImpl obj) {
                return obj.getNumberOfUnits();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setNumberOfUnits((String)value);
            }
        }
        ,
        PeerReviewFlag {
            public Object get(TraxTitleImpl obj) {
                return obj.getPeerReviewFlag();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setPeerReviewFlag((String)value);
            }
        }
        ,
        OpenAccess {
            public Object get(TraxTitleImpl obj) {
                return obj.getOpenAccess();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setOpenAccess((String)value);
            }
        }
        ,
        TargetTrackingNo {
            public Object get(TraxTitleImpl obj) {
                return obj.getTargetTrackingNo();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setTargetTrackingNo((Number)value);
            }
        }
        ,
        EditableFlag {
            public Object get(TraxTitleImpl obj) {
                return obj.getEditableFlag();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setEditableFlag((String)value);
            }
        }
        ,
        CurrentCatalogId {
            public Object get(TraxTitleImpl obj) {
                return obj.getCurrentCatalogId();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCurrentCatalogId((Number)value);
            }
        }
        ,
        CataloguedBy {
            public Object get(TraxTitleImpl obj) {
                return obj.getCataloguedBy();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCataloguedBy((String)value);
            }
        }
        ,
        CataloguedDate {
            public Object get(TraxTitleImpl obj) {
                return obj.getCataloguedDate();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setCataloguedDate((Date)value);
            }
        }
        ,
        SortTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getSortTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setSortTitle((String)value);
            }
        }
        ,
        ReasonNotExercisingRights {
            public Object get(TraxTitleImpl obj) {
                return obj.getReasonNotExercisingRights();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setReasonNotExercisingRights((String)value);
            }
        }
        ,
        TraxContentOwner {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxContentOwner();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setTraxContentOwner((TraxContentOwnerImpl)value);
            }
        }
        ,
        PrmTargetGroupTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getPrmTargetGroupTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrmTargetedProductTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getPrmTargetedProductTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxClassification {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxClassification();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxVaryingForm1 {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxVaryingForm1();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleSubject {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxTitleSubject();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxActivityTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxEventTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxEventTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleNote {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxTitleNote();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrmCampaignTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getPrmCampaignTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxUlrichsTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxUlrichsTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleAttachment {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxTitleAttachment();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxContentOwnerTitle {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxContentOwnerTitle();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleIndexInclusion {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxTitleIndexInclusion();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxImportDataParse {
            public Object get(TraxTitleImpl obj) {
                return obj.getTraxImportDataParse();
            }

            public void put(TraxTitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxTitleImpl object);

        public abstract void put(TraxTitleImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int LONGTITLE = AttributesEnum.LongTitle.index();
    public static final int PRODUCTLINE = AttributesEnum.ProductLine.index();
    public static final int CATALOGNUMBER = AttributesEnum.CatalogNumber.index();
    public static final int CATALOGROOT = AttributesEnum.CatalogRoot.index();
    public static final int CATALOGSUFFIX = AttributesEnum.CatalogSuffix.index();
    public static final int AUTHOR = AttributesEnum.Author.index();
    public static final int PUBLICATIONSTARTYEAR = AttributesEnum.PublicationStartYear.index();
    public static final int PUBLICATIONENDYEAR = AttributesEnum.PublicationEndYear.index();
    public static final int SHORTTITLE = AttributesEnum.ShortTitle.index();
    public static final int FILMAVAILABILITY = AttributesEnum.FilmAvailability.index();
    public static final int BIBLIOGRAPHICSTATUS = AttributesEnum.BibliographicStatus.index();
    public static final int TITLEDESCRIPTION = AttributesEnum.TitleDescription.index();
    public static final int SECONDARYCATALOGNUMBER = AttributesEnum.SecondaryCatalogNumber.index();
    public static final int ORIGINALPUBLISHINGCO = AttributesEnum.OriginalPublishingCo.index();
    public static final int ORIGINALPLACEOFPUBLICATION = AttributesEnum.OriginalPlaceOfPublication.index();
    public static final int ORIGINALDATESOFPUBLICATION = AttributesEnum.OriginalDatesOfPublication.index();
    public static final int PLACEOFPUBLICATIONCODE = AttributesEnum.PlaceOfPublicationCode.index();
    public static final int LANGUAGENOTE = AttributesEnum.LanguageNote.index();
    public static final int EXERCISINGRIGHTS = AttributesEnum.ExercisingRights.index();
    public static final int NONFILINGINDICATOR = AttributesEnum.NonFilingIndicator.index();
    public static final int EDITIONSTATEMENT = AttributesEnum.EditionStatement.index();
    public static final int ALPHARECORDDATES = AttributesEnum.AlphaRecordDates.index();
    public static final int PUBYEARVOLUMEFORMATTED = AttributesEnum.PubYearVolumeFormatted.index();
    public static final int PUBYEARVOLUMEUNFORMATTED = AttributesEnum.PubYearVolumeUnformatted.index();
    public static final int CATALOGINGSOURCEURL = AttributesEnum.CatalogingSourceUrl.index();
    public static final int SERIALSUBTYPE = AttributesEnum.SerialSubType.index();
    public static final int PUBLICATIONFREQUENCY = AttributesEnum.PublicationFrequency.index();
    public static final int CATALOGPUBLICATIONCITY = AttributesEnum.CatalogPublicationCity.index();
    public static final int CATALOGINDICATOR = AttributesEnum.CatalogIndicator.index();
    public static final int CHECKINREQUIREMENTS = AttributesEnum.CheckInRequirements.index();
    public static final int ROUTING = AttributesEnum.Routing.index();
    public static final int SPECIALCOPYRIGHT = AttributesEnum.SpecialCopyright.index();
    public static final int COMPSUBACCOUNTNUMBER = AttributesEnum.CompSubAccountNumber.index();
    public static final int PAIDSUBACCOUNTNUMBER = AttributesEnum.PaidSubAccountNumber.index();
    public static final int PRIMARYPMCLASS = AttributesEnum.PrimaryPmClass.index();
    public static final int SECONDARYPMCLASS = AttributesEnum.SecondaryPmClass.index();
    public static final int SOURCECATALOGVOLUMENUMBER = AttributesEnum.SourceCatalogVolumeNumber.index();
    public static final int NEWSPAPEREDITIONFILMED = AttributesEnum.NewspaperEditionFilmed.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CONTENTTYPE = AttributesEnum.ContentType.index();
    public static final int SUBCONTENTTYPE = AttributesEnum.SubContentType.index();
    public static final int ENUMERATION = AttributesEnum.Enumeration.index();
    public static final int NUMBEROFUNITS = AttributesEnum.NumberOfUnits.index();
    public static final int PEERREVIEWFLAG = AttributesEnum.PeerReviewFlag.index();
    public static final int OPENACCESS = AttributesEnum.OpenAccess.index();
    public static final int TARGETTRACKINGNO = AttributesEnum.TargetTrackingNo.index();
    public static final int EDITABLEFLAG = AttributesEnum.EditableFlag.index();
    public static final int CURRENTCATALOGID = AttributesEnum.CurrentCatalogId.index();
    public static final int CATALOGUEDBY = AttributesEnum.CataloguedBy.index();
    public static final int CATALOGUEDDATE = AttributesEnum.CataloguedDate.index();
    public static final int SORTTITLE = AttributesEnum.SortTitle.index();
    public static final int REASONNOTEXERCISINGRIGHTS = AttributesEnum.ReasonNotExercisingRights.index();
    public static final int TRAXCONTENTOWNER = AttributesEnum.TraxContentOwner.index();
    public static final int PRMTARGETGROUPTITLE = AttributesEnum.PrmTargetGroupTitle.index();
    public static final int PRMTARGETEDPRODUCTTITLE = AttributesEnum.PrmTargetedProductTitle.index();
    public static final int TRAXCLASSIFICATION = AttributesEnum.TraxClassification.index();
    public static final int TRAXVARYINGFORM1 = AttributesEnum.TraxVaryingForm1.index();
    public static final int TRAXTITLESUBJECT = AttributesEnum.TraxTitleSubject.index();
    public static final int TRAXACTIVITYTITLE = AttributesEnum.TraxActivityTitle.index();
    public static final int TRAXEVENTTITLE = AttributesEnum.TraxEventTitle.index();
    public static final int TRAXTITLENOTE = AttributesEnum.TraxTitleNote.index();
    public static final int PRMCAMPAIGNTITLE = AttributesEnum.PrmCampaignTitle.index();
    public static final int TRAXULRICHSTITLE = AttributesEnum.TraxUlrichsTitle.index();
    public static final int TRAXTITLEATTACHMENT = AttributesEnum.TraxTitleAttachment.index();
    public static final int TRAXCONTENTOWNERTITLE = AttributesEnum.TraxContentOwnerTitle.index();
    public static final int TRAXTITLEINDEXINCLUSION = AttributesEnum.TraxTitleIndexInclusion.index();
    public static final int TRAXIMPORTDATAPARSE = AttributesEnum.TraxImportDataParse.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxTitleImpl() {
        isNew = false;
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.eo.TraxTitle");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ContentOwnerId, using the alias name ContentOwnerId.
     * @return the ContentOwnerId
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentOwnerId.
     * @param value value to set the ContentOwnerId
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for LongTitle, using the alias name LongTitle.
     * @return the LongTitle
     */
    public String getLongTitle() {
        return (String)getAttributeInternal(LONGTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LongTitle.
     * @param value value to set the LongTitle
     */
    public void setLongTitle(String value) {
        setAttributeInternal(LONGTITLE, value);

        //We create the sort title to map to OVRs here
        this.setSortTitle(this.createSortTitle());
    }

    /**
     * Gets the attribute value for ProductLine, using the alias name ProductLine.
     * @return the ProductLine
     */
    public String getProductLine() {
        return (String)getAttributeInternal(PRODUCTLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductLine.
     * @param value value to set the ProductLine
     */
    public void setProductLine(String value) {
        setAttributeInternal(PRODUCTLINE, value);
    }

    /**
     * Gets the attribute value for CatalogNumber, using the alias name CatalogNumber.
     * @return the CatalogNumber
     */
    public String getCatalogNumber() {
        return (String)getAttributeInternal(CATALOGNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogNumber.
     * @param value value to set the CatalogNumber
     */
    public void setCatalogNumber(String value) {
        setAttributeInternal(CATALOGNUMBER, value);
    }

    /**
     * Gets the attribute value for CatalogRoot, using the alias name CatalogRoot.
     * @return the CatalogRoot
     */
    public String getCatalogRoot() {
        return (String)getAttributeInternal(CATALOGROOT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogRoot.
     * @param value value to set the CatalogRoot
     */
    public void setCatalogRoot(String value) {
        setAttributeInternal(CATALOGROOT, value);
    }

    /**
     * Gets the attribute value for CatalogSuffix, using the alias name CatalogSuffix.
     * @return the CatalogSuffix
     */
    public String getCatalogSuffix() {
        return (String)getAttributeInternal(CATALOGSUFFIX);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogSuffix.
     * @param value value to set the CatalogSuffix
     */
    public void setCatalogSuffix(String value) {
        setAttributeInternal(CATALOGSUFFIX, value);
    }

    /**
     * Gets the attribute value for Author, using the alias name Author.
     * @return the Author
     */
    public String getAuthor() {
        return (String)getAttributeInternal(AUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Author.
     * @param value value to set the Author
     */
    public void setAuthor(String value) {
        setAttributeInternal(AUTHOR, value);
    }

    /**
     * Gets the attribute value for PublicationStartYear, using the alias name PublicationStartYear.
     * @return the PublicationStartYear
     */
    public String getPublicationStartYear() {
        return (String)getAttributeInternal(PUBLICATIONSTARTYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublicationStartYear.
     * @param value value to set the PublicationStartYear
     */
    public void setPublicationStartYear(String value) {
        setAttributeInternal(PUBLICATIONSTARTYEAR, value);
    }

    /**
     * Gets the attribute value for PublicationEndYear, using the alias name PublicationEndYear.
     * @return the PublicationEndYear
     */
    public String getPublicationEndYear() {
        return (String)getAttributeInternal(PUBLICATIONENDYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublicationEndYear.
     * @param value value to set the PublicationEndYear
     */
    public void setPublicationEndYear(String value) {
        setAttributeInternal(PUBLICATIONENDYEAR, value);
    }

    /**
     * Gets the attribute value for ShortTitle, using the alias name ShortTitle.
     * @return the ShortTitle
     */
    public String getShortTitle() {
        return (String)getAttributeInternal(SHORTTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShortTitle.
     * @param value value to set the ShortTitle
     */
    public void setShortTitle(String value) {
        setAttributeInternal(SHORTTITLE, value);
    }

    /**
     * Gets the attribute value for FilmAvailability, using the alias name FilmAvailability.
     * @return the FilmAvailability
     */
    public String getFilmAvailability() {
        return (String)getAttributeInternal(FILMAVAILABILITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for FilmAvailability.
     * @param value value to set the FilmAvailability
     */
    public void setFilmAvailability(String value) {
        setAttributeInternal(FILMAVAILABILITY, value);
    }

    /**
     * Gets the attribute value for BibliographicStatus, using the alias name BibliographicStatus.
     * @return the BibliographicStatus
     */
    public String getBibliographicStatus() {
        return (String)getAttributeInternal(BIBLIOGRAPHICSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BibliographicStatus.
     * @param value value to set the BibliographicStatus
     */
    public void setBibliographicStatus(String value) {
        setAttributeInternal(BIBLIOGRAPHICSTATUS, value);
    }

    /**
     * Gets the attribute value for TitleDescription, using the alias name TitleDescription.
     * @return the TitleDescription
     */
    public String getTitleDescription() {
        return (String)getAttributeInternal(TITLEDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TitleDescription.
     * @param value value to set the TitleDescription
     */
    public void setTitleDescription(String value) {
        setAttributeInternal(TITLEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for SecondaryCatalogNumber, using the alias name SecondaryCatalogNumber.
     * @return the SecondaryCatalogNumber
     */
    public String getSecondaryCatalogNumber() {
        return (String)getAttributeInternal(SECONDARYCATALOGNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for SecondaryCatalogNumber.
     * @param value value to set the SecondaryCatalogNumber
     */
    public void setSecondaryCatalogNumber(String value) {
        setAttributeInternal(SECONDARYCATALOGNUMBER, value);
    }

    /**
     * Gets the attribute value for OriginalPublishingCo, using the alias name OriginalPublishingCo.
     * @return the OriginalPublishingCo
     */
    public String getOriginalPublishingCo() {
        return (String)getAttributeInternal(ORIGINALPUBLISHINGCO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OriginalPublishingCo.
     * @param value value to set the OriginalPublishingCo
     */
    public void setOriginalPublishingCo(String value) {
        setAttributeInternal(ORIGINALPUBLISHINGCO, value);
    }

    /**
     * Gets the attribute value for OriginalPlaceOfPublication, using the alias name OriginalPlaceOfPublication.
     * @return the OriginalPlaceOfPublication
     */
    public String getOriginalPlaceOfPublication() {
        return (String)getAttributeInternal(ORIGINALPLACEOFPUBLICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for OriginalPlaceOfPublication.
     * @param value value to set the OriginalPlaceOfPublication
     */
    public void setOriginalPlaceOfPublication(String value) {
        setAttributeInternal(ORIGINALPLACEOFPUBLICATION, value);
    }

    /**
     * Gets the attribute value for OriginalDatesOfPublication, using the alias name OriginalDatesOfPublication.
     * @return the OriginalDatesOfPublication
     */
    public String getOriginalDatesOfPublication() {
        return (String)getAttributeInternal(ORIGINALDATESOFPUBLICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for OriginalDatesOfPublication.
     * @param value value to set the OriginalDatesOfPublication
     */
    public void setOriginalDatesOfPublication(String value) {
        setAttributeInternal(ORIGINALDATESOFPUBLICATION, value);
    }

    /**
     * Gets the attribute value for PlaceOfPublicationCode, using the alias name PlaceOfPublicationCode.
     * @return the PlaceOfPublicationCode
     */
    public String getPlaceOfPublicationCode() {
        return (String)getAttributeInternal(PLACEOFPUBLICATIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlaceOfPublicationCode.
     * @param value value to set the PlaceOfPublicationCode
     */
    public void setPlaceOfPublicationCode(String value) {
        setAttributeInternal(PLACEOFPUBLICATIONCODE, value);
    }

    /**
     * Gets the attribute value for LanguageNote, using the alias name LanguageNote.
     * @return the LanguageNote
     */
    public String getLanguageNote() {
        return (String)getAttributeInternal(LANGUAGENOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LanguageNote.
     * @param value value to set the LanguageNote
     */
    public void setLanguageNote(String value) {
        setAttributeInternal(LANGUAGENOTE, value);
    }

    /**
     * Gets the attribute value for ExercisingRights, using the alias name ExercisingRights.
     * @return the ExercisingRights
     */
    public String getExercisingRights() {
        return (String)getAttributeInternal(EXERCISINGRIGHTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExercisingRights.
     * @param value value to set the ExercisingRights
     */
    public void setExercisingRights(String value) {
        setAttributeInternal(EXERCISINGRIGHTS, value);
    }

    /**
     * Gets the attribute value for NonFilingIndicator, using the alias name NonFilingIndicator.
     * @return the NonFilingIndicator
     */
    public String getNonFilingIndicator() {
        return (String)getAttributeInternal(NONFILINGINDICATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for NonFilingIndicator.
     * @param value value to set the NonFilingIndicator
     */
    public void setNonFilingIndicator(String value) {
        setAttributeInternal(NONFILINGINDICATOR, value);
    }

    /**
     * Gets the attribute value for EditionStatement, using the alias name EditionStatement.
     * @return the EditionStatement
     */
    public String getEditionStatement() {
        return (String)getAttributeInternal(EDITIONSTATEMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EditionStatement.
     * @param value value to set the EditionStatement
     */
    public void setEditionStatement(String value) {
        setAttributeInternal(EDITIONSTATEMENT, value);
    }

    /**
     * Gets the attribute value for AlphaRecordDates, using the alias name AlphaRecordDates.
     * @return the AlphaRecordDates
     */
    public String getAlphaRecordDates() {
        return (String)getAttributeInternal(ALPHARECORDDATES);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlphaRecordDates.
     * @param value value to set the AlphaRecordDates
     */
    public void setAlphaRecordDates(String value) {
        setAttributeInternal(ALPHARECORDDATES, value);
    }

    /**
     * Gets the attribute value for PubYearVolumeFormatted, using the alias name PubYearVolumeFormatted.
     * @return the PubYearVolumeFormatted
     */
    public String getPubYearVolumeFormatted() {
        return (String)getAttributeInternal(PUBYEARVOLUMEFORMATTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for PubYearVolumeFormatted.
     * @param value value to set the PubYearVolumeFormatted
     */
    public void setPubYearVolumeFormatted(String value) {
        setAttributeInternal(PUBYEARVOLUMEFORMATTED, value);
    }

    /**
     * Gets the attribute value for PubYearVolumeUnformatted, using the alias name PubYearVolumeUnformatted.
     * @return the PubYearVolumeUnformatted
     */
    public String getPubYearVolumeUnformatted() {
        return (String)getAttributeInternal(PUBYEARVOLUMEUNFORMATTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for PubYearVolumeUnformatted.
     * @param value value to set the PubYearVolumeUnformatted
     */
    public void setPubYearVolumeUnformatted(String value) {
        setAttributeInternal(PUBYEARVOLUMEUNFORMATTED, value);
    }

    /**
     * Gets the attribute value for CatalogingSourceUrl, using the alias name CatalogingSourceUrl.
     * @return the CatalogingSourceUrl
     */
    public String getCatalogingSourceUrl() {
        return (String)getAttributeInternal(CATALOGINGSOURCEURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogingSourceUrl.
     * @param value value to set the CatalogingSourceUrl
     */
    public void setCatalogingSourceUrl(String value) {
        setAttributeInternal(CATALOGINGSOURCEURL, value);
    }

    /**
     * Gets the attribute value for SerialSubType, using the alias name SerialSubType.
     * @return the SerialSubType
     */
    public String getSerialSubType() {
        return (String)getAttributeInternal(SERIALSUBTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SerialSubType.
     * @param value value to set the SerialSubType
     */
    public void setSerialSubType(String value) {
        setAttributeInternal(SERIALSUBTYPE, value);
    }

    /**
     * Gets the attribute value for PublicationFrequency, using the alias name PublicationFrequency.
     * @return the PublicationFrequency
     */
    public String getPublicationFrequency() {
        return (String)getAttributeInternal(PUBLICATIONFREQUENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublicationFrequency.
     * @param value value to set the PublicationFrequency
     */
    public void setPublicationFrequency(String value) {
        setAttributeInternal(PUBLICATIONFREQUENCY, value);
    }

    /**
     * Gets the attribute value for CatalogPublicationCity, using the alias name CatalogPublicationCity.
     * @return the CatalogPublicationCity
     */
    public String getCatalogPublicationCity() {
        return (String)getAttributeInternal(CATALOGPUBLICATIONCITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogPublicationCity.
     * @param value value to set the CatalogPublicationCity
     */
    public void setCatalogPublicationCity(String value) {
        setAttributeInternal(CATALOGPUBLICATIONCITY, value);
    }

    /**
     * Gets the attribute value for CatalogIndicator, using the alias name CatalogIndicator.
     * @return the CatalogIndicator
     */
    public String getCatalogIndicator() {
        return (String)getAttributeInternal(CATALOGINDICATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatalogIndicator.
     * @param value value to set the CatalogIndicator
     */
    public void setCatalogIndicator(String value) {
        setAttributeInternal(CATALOGINDICATOR, value);
    }

    /**
     * Gets the attribute value for CheckInRequirements, using the alias name CheckInRequirements.
     * @return the CheckInRequirements
     */
    public String getCheckInRequirements() {
        return (String)getAttributeInternal(CHECKINREQUIREMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CheckInRequirements.
     * @param value value to set the CheckInRequirements
     */
    public void setCheckInRequirements(String value) {
        setAttributeInternal(CHECKINREQUIREMENTS, value);
    }

    /**
     * Gets the attribute value for Routing, using the alias name Routing.
     * @return the Routing
     */
    public String getRouting() {
        return (String)getAttributeInternal(ROUTING);
    }

    /**
     * Sets <code>value</code> as the attribute value for Routing.
     * @param value value to set the Routing
     */
    public void setRouting(String value) {
        setAttributeInternal(ROUTING, value);
    }

    /**
     * Gets the attribute value for SpecialCopyright, using the alias name SpecialCopyright.
     * @return the SpecialCopyright
     */
    public String getSpecialCopyright() {
        return (String)getAttributeInternal(SPECIALCOPYRIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SpecialCopyright.
     * @param value value to set the SpecialCopyright
     */
    public void setSpecialCopyright(String value) {
        setAttributeInternal(SPECIALCOPYRIGHT, value);
    }

    /**
     * Gets the attribute value for CompSubAccountNumber, using the alias name CompSubAccountNumber.
     * @return the CompSubAccountNumber
     */
    public String getCompSubAccountNumber() {
        return (String)getAttributeInternal(COMPSUBACCOUNTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompSubAccountNumber.
     * @param value value to set the CompSubAccountNumber
     */
    public void setCompSubAccountNumber(String value) {
        setAttributeInternal(COMPSUBACCOUNTNUMBER, value);
    }

    /**
     * Gets the attribute value for PaidSubAccountNumber, using the alias name PaidSubAccountNumber.
     * @return the PaidSubAccountNumber
     */
    public String getPaidSubAccountNumber() {
        return (String)getAttributeInternal(PAIDSUBACCOUNTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaidSubAccountNumber.
     * @param value value to set the PaidSubAccountNumber
     */
    public void setPaidSubAccountNumber(String value) {
        setAttributeInternal(PAIDSUBACCOUNTNUMBER, value);
    }

    /**
     * Gets the attribute value for PrimaryPmClass, using the alias name PrimaryPmClass.
     * @return the PrimaryPmClass
     */
    public String getPrimaryPmClass() {
        return (String)getAttributeInternal(PRIMARYPMCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrimaryPmClass.
     * @param value value to set the PrimaryPmClass
     */
    public void setPrimaryPmClass(String value) {
        setAttributeInternal(PRIMARYPMCLASS, value);
    }

    /**
     * Gets the attribute value for SecondaryPmClass, using the alias name SecondaryPmClass.
     * @return the SecondaryPmClass
     */
    public String getSecondaryPmClass() {
        return (String)getAttributeInternal(SECONDARYPMCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for SecondaryPmClass.
     * @param value value to set the SecondaryPmClass
     */
    public void setSecondaryPmClass(String value) {
        setAttributeInternal(SECONDARYPMCLASS, value);
    }

    /**
     * Gets the attribute value for SourceCatalogVolumeNumber, using the alias name SourceCatalogVolumeNumber.
     * @return the SourceCatalogVolumeNumber
     */
    public String getSourceCatalogVolumeNumber() {
        return (String)getAttributeInternal(SOURCECATALOGVOLUMENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceCatalogVolumeNumber.
     * @param value value to set the SourceCatalogVolumeNumber
     */
    public void setSourceCatalogVolumeNumber(String value) {
        setAttributeInternal(SOURCECATALOGVOLUMENUMBER, value);
    }

    /**
     * Gets the attribute value for NewspaperEditionFilmed, using the alias name NewspaperEditionFilmed.
     * @return the NewspaperEditionFilmed
     */
    public String getNewspaperEditionFilmed() {
        return (String)getAttributeInternal(NEWSPAPEREDITIONFILMED);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewspaperEditionFilmed.
     * @param value value to set the NewspaperEditionFilmed
     */
    public void setNewspaperEditionFilmed(String value) {
        setAttributeInternal(NEWSPAPEREDITIONFILMED, value);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the ActiveFlag
     */
    public String getActiveFlag() {
        return (String)getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for ContentType, using the alias name ContentType.
     * @return the ContentType
     */
    public String getContentType() {
        return (String)getAttributeInternal(CONTENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentType.
     * @param value value to set the ContentType
     */
    public void setContentType(String value) {
        setAttributeInternal(CONTENTTYPE, value);
    }

    /**
     * Gets the attribute value for SubContentType, using the alias name SubContentType.
     * @return the SubContentType
     */
    public String getSubContentType() {
        return (String)getAttributeInternal(SUBCONTENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubContentType.
     * @param value value to set the SubContentType
     */
    public void setSubContentType(String value) {
        setAttributeInternal(SUBCONTENTTYPE, value);
    }

    /**
     * Gets the attribute value for Enumeration, using the alias name Enumeration.
     * @return the Enumeration
     */
    public String getEnumeration() {
        return (String)getAttributeInternal(ENUMERATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Enumeration.
     * @param value value to set the Enumeration
     */
    public void setEnumeration(String value) {
        setAttributeInternal(ENUMERATION, value);
    }

    /**
     * Gets the attribute value for NumberOfUnits, using the alias name NumberOfUnits.
     * @return the NumberOfUnits
     */
    public String getNumberOfUnits() {
        return (String)getAttributeInternal(NUMBEROFUNITS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfUnits.
     * @param value value to set the NumberOfUnits
     */
    public void setNumberOfUnits(String value) {
        setAttributeInternal(NUMBEROFUNITS, value);
    }

    /**
     * Gets the attribute value for PeerReviewFlag, using the alias name PeerReviewFlag.
     * @return the PeerReviewFlag
     */
    public String getPeerReviewFlag() {
        return (String)getAttributeInternal(PEERREVIEWFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PeerReviewFlag.
     * @param value value to set the PeerReviewFlag
     */
    public void setPeerReviewFlag(String value) {
        setAttributeInternal(PEERREVIEWFLAG, value);
    }

    /**
     * Gets the attribute value for OpenAccess, using the alias name OpenAccess.
     * @return the OpenAccess
     */
    public String getOpenAccess() {
        return (String)getAttributeInternal(OPENACCESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpenAccess.
     * @param value value to set the OpenAccess
     */
    public void setOpenAccess(String value) {
        setAttributeInternal(OPENACCESS, value);
    }

    /**
     * Gets the attribute value for TargetTrackingNo, using the alias name TargetTrackingNo.
     * @return the TargetTrackingNo
     */
    public Number getTargetTrackingNo() {
        return (Number)getAttributeInternal(TARGETTRACKINGNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetTrackingNo.
     * @param value value to set the TargetTrackingNo
     */
    public void setTargetTrackingNo(Number value) {
        setAttributeInternal(TARGETTRACKINGNO, value);
    }

    /**
     * Gets the attribute value for EditableFlag, using the alias name EditableFlag.
     * @return the EditableFlag
     */
    public String getEditableFlag() {
        return (String)getAttributeInternal(EDITABLEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for EditableFlag.
     * @param value value to set the EditableFlag
     */
    public void setEditableFlag(String value) {
        setAttributeInternal(EDITABLEFLAG, value);
    }

    /**
     * Gets the attribute value for CurrentCatalogId, using the alias name CurrentCatalogId.
     * @return the CurrentCatalogId
     */
    public Number getCurrentCatalogId() {
        return (Number)getAttributeInternal(CURRENTCATALOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentCatalogId.
     * @param value value to set the CurrentCatalogId
     */
    public void setCurrentCatalogId(Number value) {
        setAttributeInternal(CURRENTCATALOGID, value);
    }

    /**
     * Gets the attribute value for CataloguedBy, using the alias name CataloguedBy.
     * @return the CataloguedBy
     */
    public String getCataloguedBy() {
        return (String)getAttributeInternal(CATALOGUEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CataloguedBy.
     * @param value value to set the CataloguedBy
     */
    public void setCataloguedBy(String value) {
        setAttributeInternal(CATALOGUEDBY, value);
    }

    /**
     * Gets the attribute value for CataloguedDate, using the alias name CataloguedDate.
     * @return the CataloguedDate
     */
    public Date getCataloguedDate() {
        return (Date)getAttributeInternal(CATALOGUEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CataloguedDate.
     * @param value value to set the CataloguedDate
     */
    public void setCataloguedDate(Date value) {
        setAttributeInternal(CATALOGUEDDATE, value);
    }


    /**
     * Gets the attribute value for SortTitle, using the alias name SortTitle.
     * @return the SortTitle
     */
    public String getSortTitle() {
        return (String)getAttributeInternal(SORTTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SortTitle.
     * @param value value to set the SortTitle
     */
    public void setSortTitle(String value) {
        setAttributeInternal(SORTTITLE, value);
    }

    /**
     * Gets the attribute value for ReasonNotExercisingRights, using the alias name ReasonNotExercisingRights.
     * @return the ReasonNotExercisingRights
     */
    public String getReasonNotExercisingRights() {
        return (String)getAttributeInternal(REASONNOTEXERCISINGRIGHTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReasonNotExercisingRights.
     * @param value value to set the ReasonNotExercisingRights
     */
    public void setReasonNotExercisingRights(String value) {
        setAttributeInternal(REASONNOTEXERCISINGRIGHTS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public TraxContentOwnerImpl getTraxContentOwner() {
        return (TraxContentOwnerImpl)getAttributeInternal(TRAXCONTENTOWNER);
    }

    /**
     * Sets <code>value</code> as the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public void setTraxContentOwner(TraxContentOwnerImpl value) {
        setAttributeInternal(TRAXCONTENTOWNER, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPrmTargetGroupTitle() {
        return (RowIterator)getAttributeInternal(PRMTARGETGROUPTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPrmTargetedProductTitle() {
        return (RowIterator)getAttributeInternal(PRMTARGETEDPRODUCTTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxClassification() {
        return (RowIterator)getAttributeInternal(TRAXCLASSIFICATION);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxVaryingForm1() {
        return (RowIterator)getAttributeInternal(TRAXVARYINGFORM1);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleSubject() {
        return (RowIterator)getAttributeInternal(TRAXTITLESUBJECT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityTitle() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYTITLE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxEventTitle() {
        return (RowIterator)getAttributeInternal(TRAXEVENTTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleNote() {
        return (RowIterator)getAttributeInternal(TRAXTITLENOTE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPrmCampaignTitle() {
        return (RowIterator)getAttributeInternal(PRMCAMPAIGNTITLE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxUlrichsTitle() {
        return (RowIterator)getAttributeInternal(TRAXULRICHSTITLE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleAttachment() {
        return (RowIterator)getAttributeInternal(TRAXTITLEATTACHMENT);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxContentOwnerTitle() {
        return (RowIterator)getAttributeInternal(TRAXCONTENTOWNERTITLE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleIndexInclusion() {
        return (RowIterator)getAttributeInternal(TRAXTITLEINDEXINCLUSION);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxImportDataParse() {
        return (RowIterator)getAttributeInternal(TRAXIMPORTDATAPARSE);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Validation method for TraxTitle.
     */
    public boolean validateTraxTitleContentOwner() {
        RowIterator acctIter = this.getTraxContentOwnerTitle();
        TraxContentOwnerTitleImpl co = null;
        int i = 0;
        int j = 0;

        while (j < this.getTraxContentOwnerTitle().getRowCount()) {
            co = (TraxContentOwnerTitleImpl)acctIter.next();

            if ("Y".equalsIgnoreCase(co.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }


        return true;
    }


    /**
     * Validation method for TraxTitle.
     */
    public boolean validateTraxTitleSubjects() {

        RowIterator acctIter = this.getTraxTitleSubject();
        TraxTitleSubjectImpl sub = null;
        int i = 0;
        int j = 0;

        while (j < this.getTraxTitleSubject().getRowCount()) {
            sub = (TraxTitleSubjectImpl)acctIter.next();

            if ("Y".equalsIgnoreCase(sub.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**
     * Validation method for TraxTitle.
     */
    public boolean validateTraxTitleClassifications() {
        RowIterator acctIter = getTraxClassification();
        int i = 0;
        int j = 0;

        TraxClassificationImpl classification;
        while (j < this.getTraxClassification().getRowCount()) {
            classification = (TraxClassificationImpl)acctIter.next();
            if (classification.getPrimaryFlag().equalsIgnoreCase("Y")) {
                i++;
            }
            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**Validation method for Title
     */
    public boolean validateTitleVaryingForms() {
        RowIterator acctIter = getTraxVaryingForm1();
        int i = 0;
        int j = 0;

        TraxVaryingFormImpl varyingForm;
        while (j < this.getTraxVaryingForm1().getRowCount()) {
            varyingForm = (TraxVaryingFormImpl)acctIter.next();
            if ("Y".equalsIgnoreCase(varyingForm.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**
     * Validation method for TraxTitle.
     */
    public boolean validateTraxTitlePmClass() {
        if (isNew &&
            (this.getPrimaryPmClass() == null || this.getPrimaryPmClass().equalsIgnoreCase(""))) {
            return false;
        }

        return true;
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList atts) {

        super.create(atts);

        isNew = true;

        try {
            SequenceImpl seq =
                new SequenceImpl("PRM_TARGET_TRACKING_NO_SEQ", getDBTransaction());
            this.setTargetTrackingNo(seq.getSequenceNumber());

        } catch (Exception e1) {
            System.out.println("*******************Exception while creating target tracking number***********************");
            System.out.println("Error :" + e1.toString());
            //throw new JboException("Invalid primary key value.");
        }
    }

    protected void setInvalid() {
        super.setInvalid();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {

        super.doDML(operation, e);

        //inserting content owner as primary content owner in trax_contet_owner_title.
        if (operation == DML_INSERT) {
            if (getContentOwnerId() != null) {
                try {
                    Row r = getTraxContentOwnerTitle().createRow();
                    r.setAttribute("ContentOwnerId", getContentOwnerId());
                    r.setAttribute("OwnerType", "");
                    r.setAttribute("PrimaryFlag", "Y");
                    getTraxContentOwnerTitle().insertRow(r);
                } catch (Exception ex) {
                    System.out.println("Primary content owner insertion failed. Error :" +
                                       ex.toString());
                }
            }
        }

        else if (operation == DML_UPDATE) {
            boolean newCO = true;
            if (getContentOwnerId() != null) {
                try {
                    RowIterator cIter = getTraxContentOwnerTitle();
                    TraxContentOwnerTitleImpl coTitle;
                    while (cIter.hasNext()) {
                        coTitle = (TraxContentOwnerTitleImpl)cIter.next();
                        if (coTitle.getContentOwnerId().compareTo(getContentOwnerId()) ==
                            0) {
                            newCO = false;
                            coTitle.setPrimaryFlag("Y");
                            break;
                        } else {
                            if (this.getCatalogNumber() != null) {
                                coTitle.setPrimaryFlag("N");
                            } else if (this.getCatalogNumber() == null) {
                                coTitle.remove();
                            }
                        }
                    }

                    if (newCO) {
                        Row r = getTraxContentOwnerTitle().createRow();
                        r.setAttribute("ContentOwnerId", getContentOwnerId());
                        r.setAttribute("OwnerType", "");
                        r.setAttribute("PrimaryFlag", "Y");
                        getTraxContentOwnerTitle().insertRow(r);

                    }
                } catch (Exception ex) {
                    System.out.println("Primary content owner update failed. Error :" +
                                       ex.toString());
                }
            }
        }
    }

    /**Create Sort Title method to be used for OVR generation
     */

    private String createSortTitle() {
        String value = this.getLongTitle();
        try {

            if (value != null && value.trim().length() > 0) {
                value = value.trim();
                if (value.startsWith("The ") || value.startsWith("THE ") ||
                    value.startsWith("the "))
                    value = value.substring(4) + " " + value.substring(0, 3);
                else if (value.startsWith("An ") || value.startsWith("AN ") ||
                         value.startsWith("an "))
                    value = value.substring(3) + " " + value.substring(0, 2);
                else if (value.startsWith("A ") || value.startsWith("a "))
                    value = value.substring(2) + " " + value.substring(0, 1);
            }
        } catch (Exception e) {
            return this.getLongTitle();
        }

        return value;
    }

}
