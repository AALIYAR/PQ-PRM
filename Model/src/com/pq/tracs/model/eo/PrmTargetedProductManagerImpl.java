package com.pq.tracs.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 18 18:53:34 EDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrmTargetedProductManagerImpl extends PrmBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getId();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        PrmTargetedProductId {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getPrmTargetedProductId();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setPrmTargetedProductId((Number)value);
            }
        }
        ,
        PrmUserId {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getPrmUserId();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setPrmUserId((Number)value);
            }
        }
        ,
        AddedDate {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getAddedDate();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setAddedDate((Date)value);
            }
        }
        ,
        RemovedDate {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getRemovedDate();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setRemovedDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        PrmTargetedProduct {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getPrmTargetedProduct();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setPrmTargetedProduct((PrmTargetedProductImpl)value);
            }
        }
        ,
        PrmAllianceManager {
            public Object get(PrmTargetedProductManagerImpl obj) {
                return obj.getPrmAllianceManager();
            }

            public void put(PrmTargetedProductManagerImpl obj, Object value) {
                obj.setPrmAllianceManager((PrmBaseEntity)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrmTargetedProductManagerImpl object);

        public abstract void put(PrmTargetedProductManagerImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PRMTARGETEDPRODUCTID = AttributesEnum.PrmTargetedProductId.index();
    public static final int PRMUSERID = AttributesEnum.PrmUserId.index();
    public static final int ADDEDDATE = AttributesEnum.AddedDate.index();
    public static final int REMOVEDDATE = AttributesEnum.RemovedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int PRMTARGETEDPRODUCT = AttributesEnum.PrmTargetedProduct.index();
    public static final int PRMALLIANCEMANAGER = AttributesEnum.PrmAllianceManager.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrmTargetedProductManagerImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.eo.PrmTargetedProductManager");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for PrmTargetedProductId, using the alias name PrmTargetedProductId.
     * @return the PrmTargetedProductId
     */
    public Number getPrmTargetedProductId() {
        return (Number)getAttributeInternal(PRMTARGETEDPRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrmTargetedProductId.
     * @param value value to set the PrmTargetedProductId
     */
    public void setPrmTargetedProductId(Number value) {
        setAttributeInternal(PRMTARGETEDPRODUCTID, value);
    }

    /**
     * Gets the attribute value for PrmUserId, using the alias name PrmUserId.
     * @return the PrmUserId
     */
    public Number getPrmUserId() {
        return (Number)getAttributeInternal(PRMUSERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrmUserId.
     * @param value value to set the PrmUserId
     */
    public void setPrmUserId(Number value) {
        setAttributeInternal(PRMUSERID, value);
    }

    /**
     * Gets the attribute value for AddedDate, using the alias name AddedDate.
     * @return the AddedDate
     */
    public Date getAddedDate() {
        return (Date)getAttributeInternal(ADDEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddedDate.
     * @param value value to set the AddedDate
     */
    public void setAddedDate(Date value) {
        setAttributeInternal(ADDEDDATE, value);
    }

    /**
     * Gets the attribute value for RemovedDate, using the alias name RemovedDate.
     * @return the RemovedDate
     */
    public Date getRemovedDate() {
        return (Date)getAttributeInternal(REMOVEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemovedDate.
     * @param value value to set the RemovedDate
     */
    public void setRemovedDate(Date value) {
        setAttributeInternal(REMOVEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public PrmTargetedProductImpl getPrmTargetedProduct() {
        return (PrmTargetedProductImpl)getAttributeInternal(PRMTARGETEDPRODUCT);
    }

    /**
     * Sets <code>value</code> as the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public void setPrmTargetedProduct(PrmTargetedProductImpl value) {
        setAttributeInternal(PRMTARGETEDPRODUCT, value);
    }

    /**
     * @return the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public PrmBaseEntity getPrmAllianceManager() {
        return (PrmBaseEntity)getAttributeInternal(PRMALLIANCEMANAGER);
    }

    /**
     * Sets <code>value</code> as the associated entity com.pq.tracs.model.eo.PrmBaseEntity.
     */
    public void setPrmAllianceManager(PrmBaseEntity value) {
        setAttributeInternal(PRMALLIANCEMANAGER, value);
    }


    /**
     * Validation method for PrmTargetedProductManager.
     */
    public boolean validateRemovedDate() {
        if (this.getRemovedDate()!=null) {
                  try {
                      RowIterator productManagers =
                      this.getPrmTargetedProduct().getPrmTargetedProductManager();
                      if (productManagers.getRowCount() < 2) {
                          return true;
                      } else {
                          productManagers.reset();
                          PrmTargetedProductManagerImpl productManager; 
                          while (productManagers.hasNext()) {
                              productManager =
                                  (PrmTargetedProductManagerImpl)productManagers.next();
                              if (this.getId() != null &&
                                  productManager.getId() != null &&
                                  productManager.getId().compareTo(this.getId()) !=
                                  0) {
                                  if (productManager.getRemovedDate().compareTo(this.getRemovedDate()) ==
                                      0) {
                                      return false;
                                  }
                              }
                          }
                      }
                  } catch (Exception ex) {

                  }
              } else {
                  try {
                      RowIterator productManagers =
                        this.getPrmTargetedProduct().getPrmTargetedProductManager();
                      if (productManagers.getRowCount() < 2) {
                          return true;
                      } else {
                          productManagers.reset();
                          PrmTargetedProductManagerImpl productManager; 
                          while (productManagers.hasNext()) {
                              productManager =
                                      (PrmTargetedProductManagerImpl)productManagers.next();
                              if (this.getId() != null &&
                                  productManager.getId() != null &&
                                  productManager.getId().compareTo(this.getId()) !=
                                  0) {
                                  if (productManager.getRemovedDate() == null) {
                                      return false;
                                  }
                              }
                          }
                      }
                  } catch (Exception ex) {

                  }
              } 

        return true;
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
    
   
    
    
}
