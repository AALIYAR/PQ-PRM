package com.pq.tracs.model.eo;

import java.math.BigDecimal;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import com.pq.tracs.util.DESEncrypter;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 09 08:39:04 EST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JhsUsersImpl extends PrmBaseEntity {
    private static EntityDefImpl mDefinitionObject;
    
  private DESEncrypter encrpter = new DESEncrypter();

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(JhsUsersImpl obj) {
                return obj.getId();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setId((BigDecimal)value);
            }
        }
        ,
        EmailAddress {
            public Object get(JhsUsersImpl obj) {
                return obj.getEmailAddress();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        Username {
            public Object get(JhsUsersImpl obj) {
                return obj.getUsername();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setUsername((String)value);
            }
        }
        ,
        OrgKey {
            public Object get(JhsUsersImpl obj) {
                return obj.getOrgKey();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setOrgKey((String)value);
            }
        }
        ,
        Password {
            public Object get(JhsUsersImpl obj) {
                return obj.getPassword();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        DisplayName {
            public Object get(JhsUsersImpl obj) {
                return obj.getDisplayName();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setDisplayName((String)value);
            }
        }
        ,
        Locale {
            public Object get(JhsUsersImpl obj) {
                return obj.getLocale();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setLocale((String)value);
            }
        }
        ,
        FirstName {
            public Object get(JhsUsersImpl obj) {
                return obj.getFirstName();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        LastName {
            public Object get(JhsUsersImpl obj) {
                return obj.getLastName();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        MiddleName {
            public Object get(JhsUsersImpl obj) {
                return obj.getMiddleName();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setMiddleName((String)value);
            }
        }
        ,
        Alias {
            public Object get(JhsUsersImpl obj) {
                return obj.getAlias();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setAlias((String)value);
            }
        }
        ,
        JobTitle {
            public Object get(JhsUsersImpl obj) {
                return obj.getJobTitle();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setJobTitle((String)value);
            }
        }
        ,
        WorkPhone {
            public Object get(JhsUsersImpl obj) {
                return obj.getWorkPhone();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setWorkPhone((String)value);
            }
        }
        ,
        HomePhone {
            public Object get(JhsUsersImpl obj) {
                return obj.getHomePhone();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setHomePhone((String)value);
            }
        }
        ,
        Fax {
            public Object get(JhsUsersImpl obj) {
                return obj.getFax();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setFax((String)value);
            }
        }
        ,
        PoApproved {
            public Object get(JhsUsersImpl obj) {
                return obj.getPoApproved();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setPoApproved((String)value);
            }
        }
        ,
        UserType {
            public Object get(JhsUsersImpl obj) {
                return obj.getUserType();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setUserType((String)value);
            }
        }
        ,
        AuctionPrivilege {
            public Object get(JhsUsersImpl obj) {
                return obj.getAuctionPrivilege();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setAuctionPrivilege((String)value);
            }
        }
        ,
        NewPassword {
            public Object get(JhsUsersImpl obj) {
                return obj.getNewPassword();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setNewPassword((String)value);
            }
        }
        ,
        CurrentPassword {
            public Object get(JhsUsersImpl obj) {
                return obj.getCurrentPassword();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setCurrentPassword((String)value);
            }
        }
        ,
        ReTypePassword {
            public Object get(JhsUsersImpl obj) {
                return obj.getReTypePassword();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setReTypePassword((String)value);
            }
        }
        ,
        TraxActivityUser {
            public Object get(JhsUsersImpl obj) {
                return obj.getTraxActivityUser();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxEventUser {
            public Object get(JhsUsersImpl obj) {
                return obj.getTraxEventUser();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrmAllianceManager {
            public Object get(JhsUsersImpl obj) {
                return obj.getPrmAllianceManager();
            }

            public void put(JhsUsersImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(JhsUsersImpl object);

        public abstract void put(JhsUsersImpl object, Object value);

        public int index() {
            return JhsUsersImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return JhsUsersImpl.AttributesEnum.firstIndex() + JhsUsersImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = JhsUsersImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int ORGKEY = AttributesEnum.OrgKey.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int DISPLAYNAME = AttributesEnum.DisplayName.index();
    public static final int LOCALE = AttributesEnum.Locale.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int ALIAS = AttributesEnum.Alias.index();
    public static final int JOBTITLE = AttributesEnum.JobTitle.index();
    public static final int WORKPHONE = AttributesEnum.WorkPhone.index();
    public static final int HOMEPHONE = AttributesEnum.HomePhone.index();
    public static final int FAX = AttributesEnum.Fax.index();
    public static final int POAPPROVED = AttributesEnum.PoApproved.index();
    public static final int USERTYPE = AttributesEnum.UserType.index();
    public static final int AUCTIONPRIVILEGE = AttributesEnum.AuctionPrivilege.index();
    public static final int NEWPASSWORD = AttributesEnum.NewPassword.index();
    public static final int CURRENTPASSWORD = AttributesEnum.CurrentPassword.index();
    public static final int RETYPEPASSWORD = AttributesEnum.ReTypePassword.index();
    public static final int TRAXACTIVITYUSER = AttributesEnum.TraxActivityUser.index();
    public static final int TRAXEVENTUSER = AttributesEnum.TraxEventUser.index();
    public static final int PRMALLIANCEMANAGER = AttributesEnum.PrmAllianceManager.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JhsUsersImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.eo.JhsUsers");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public BigDecimal getId() {
        return (BigDecimal)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for EmailAddress, using the alias name EmailAddress.
     * @return the EmailAddress
     */
    public String getEmailAddress() {
        return (String)getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailAddress.
     * @param value value to set the EmailAddress
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for Username, using the alias name Username.
     * @return the Username
     */
    public String getUsername() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Username.
     * @param value value to set the Username
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for OrgKey, using the alias name OrgKey.
     * @return the OrgKey
     */
    public String getOrgKey() {
        return (String)getAttributeInternal(ORGKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgKey.
     * @param value value to set the OrgKey
     */
    public void setOrgKey(String value) {
        setAttributeInternal(ORGKEY, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the Password
     */
    public String getPassword() {
      String s = (String)getAttributeInternal(PASSWORD);
      
      try{
          if(s!=null)
              s = encrpter.decrypt(s);
              
      }catch(Exception ee){}
      
      return s;
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
      if(value!=null){
          try{
              value = encrpter.encrypt(value);
          }catch(Exception eee){}
      }
      
      setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for DisplayName, using the alias name DisplayName.
     * @return the DisplayName
     */
    public String getDisplayName() {
        return (String)getAttributeInternal(DISPLAYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DisplayName.
     * @param value value to set the DisplayName
     */
    public void setDisplayName(String value) {
        setAttributeInternal(DISPLAYNAME, value);
    }

    /**
     * Gets the attribute value for Locale, using the alias name Locale.
     * @return the Locale
     */
    public String getLocale() {
        return (String)getAttributeInternal(LOCALE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locale.
     * @param value value to set the Locale
     */
    public void setLocale(String value) {
        setAttributeInternal(LOCALE, value);
    }

    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the FirstName
     */
    public String getFirstName() {
        return (String)getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the LastName
     */
    public String getLastName() {
        return (String)getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for MiddleName, using the alias name MiddleName.
     * @return the MiddleName
     */
    public String getMiddleName() {
        return (String)getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for MiddleName.
     * @param value value to set the MiddleName
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for Alias, using the alias name Alias.
     * @return the Alias
     */
    public String getAlias() {
        return (String)getAttributeInternal(ALIAS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Alias.
     * @param value value to set the Alias
     */
    public void setAlias(String value) {
        setAttributeInternal(ALIAS, value);
    }

    /**
     * Gets the attribute value for JobTitle, using the alias name JobTitle.
     * @return the JobTitle
     */
    public String getJobTitle() {
        return (String)getAttributeInternal(JOBTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTitle.
     * @param value value to set the JobTitle
     */
    public void setJobTitle(String value) {
        setAttributeInternal(JOBTITLE, value);
    }

    /**
     * Gets the attribute value for WorkPhone, using the alias name WorkPhone.
     * @return the WorkPhone
     */
    public String getWorkPhone() {
        return (String)getAttributeInternal(WORKPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkPhone.
     * @param value value to set the WorkPhone
     */
    public void setWorkPhone(String value) {
        setAttributeInternal(WORKPHONE, value);
    }

    /**
     * Gets the attribute value for HomePhone, using the alias name HomePhone.
     * @return the HomePhone
     */
    public String getHomePhone() {
        return (String)getAttributeInternal(HOMEPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HomePhone.
     * @param value value to set the HomePhone
     */
    public void setHomePhone(String value) {
        setAttributeInternal(HOMEPHONE, value);
    }

    /**
     * Gets the attribute value for Fax, using the alias name Fax.
     * @return the Fax
     */
    public String getFax() {
        return (String)getAttributeInternal(FAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fax.
     * @param value value to set the Fax
     */
    public void setFax(String value) {
        setAttributeInternal(FAX, value);
    }

    /**
     * Gets the attribute value for PoApproved, using the alias name PoApproved.
     * @return the PoApproved
     */
    public String getPoApproved() {
        return (String)getAttributeInternal(POAPPROVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoApproved.
     * @param value value to set the PoApproved
     */
    public void setPoApproved(String value) {
        setAttributeInternal(POAPPROVED, value);
    }

    /**
     * Gets the attribute value for UserType, using the alias name UserType.
     * @return the UserType
     */
    public String getUserType() {
        return (String)getAttributeInternal(USERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserType.
     * @param value value to set the UserType
     */
    public void setUserType(String value) {
        setAttributeInternal(USERTYPE, value);
    }

    /**
     * Gets the attribute value for AuctionPrivilege, using the alias name AuctionPrivilege.
     * @return the AuctionPrivilege
     */
    public String getAuctionPrivilege() {
        return (String)getAttributeInternal(AUCTIONPRIVILEGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuctionPrivilege.
     * @param value value to set the AuctionPrivilege
     */
    public void setAuctionPrivilege(String value) {
        setAttributeInternal(AUCTIONPRIVILEGE, value);
    }

    /**
     * Gets the attribute value for NewPassword, using the alias name NewPassword.
     * @return the NewPassword
     */
    public String getNewPassword() {
        return (String)getAttributeInternal(NEWPASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewPassword.
     * @param value value to set the NewPassword
     */
    public void setNewPassword(String value) {
        setAttributeInternal(NEWPASSWORD, value);
    }

    /**
     * Gets the attribute value for CurrentPassword, using the alias name CurrentPassword.
     * @return the CurrentPassword
     */
    public String getCurrentPassword() {
        return (String)getAttributeInternal(CURRENTPASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentPassword.
     * @param value value to set the CurrentPassword
     */
    public void setCurrentPassword(String value) {
        setAttributeInternal(CURRENTPASSWORD, value);
    }

    /**
     * Gets the attribute value for ReTypePassword, using the alias name ReTypePassword.
     * @return the ReTypePassword
     */
    public String getReTypePassword() {
        return (String)getAttributeInternal(RETYPEPASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReTypePassword.
     * @param value value to set the ReTypePassword
     */
    public void setReTypePassword(String value) {
        setAttributeInternal(RETYPEPASSWORD, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[]{id});
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityUser() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYUSER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxEventUser() {
        return (RowIterator)getAttributeInternal(TRAXEVENTUSER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPrmAllianceManager() {
        return (RowIterator)getAttributeInternal(PRMALLIANCEMANAGER);
    }

   
  private void changePasswordValidation() {
  
      if(getNewPassword()!=null && getCurrentPassword()!=null && getReTypePassword()!=null){
          if(!getCurrentPassword().equals(getPassword())){
              
              throw new JboException("You entered wrong current password");
          }
          
          if(!getNewPassword().equals(getReTypePassword()))
              throw new JboException("New password and Re-enter password do not match");
          
          if(getNewPassword().equals(getPassword()))
              throw new JboException("This is your current password, Please enter another new password");
          
          setPassword(getNewPassword());
          setCurrentPassword(null);
          setNewPassword(null);
          setReTypePassword(null);
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO,"Successfully Changed Password",null));
      }
  }

  protected void validateEntity() {
      changePasswordValidation();
      super.validateEntity();
  }
  

}
